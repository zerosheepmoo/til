(self.webpackChunktil=self.webpackChunktil||[]).push([[4552],{7652:(e,l,a)=>{"use strict";a.r(l),a.d(l,{default:()=>k});var i=a(6252);const r=(0,i.Wm)("h1",{id:"컴파일러-디자인-요약"},[(0,i.Wm)("a",{class:"header-anchor",href:"#컴파일러-디자인-요약"},"#"),(0,i.Uk)(" 컴파일러 디자인 요약")],-1),t={href:"https://www.geeksforgeeks.org/last-minute-notes-compiler-design-gq/",target:"_blank",rel:"noopener noreferrer"},n=(0,i.Uk)("geek for geeks 포스팅"),s=(0,i.uE)('<h2 id="컴파일러-페이즈"><a class="header-anchor" href="#컴파일러-페이즈">#</a> 컴파일러 페이즈</h2><ul><li><code>symbol table</code>: 컴파일러에 의해 사용되는 data structure (type과 함께 있는 identifier 들 모음)</li></ul><h3 id="lexical-analysis"><a class="header-anchor" href="#lexical-analysis">#</a> Lexical Analysis</h3><ul><li>lexer, lexing, tokenization</li><li>문자들을 토큰화한다.</li><li>토큰(lexeme)은 identifier, keyword, operator, separator, literal, comment 따위다.</li><li>lexical grammar: regular grammar</li></ul><h3 id="syntax-analysis"><a class="header-anchor" href="#syntax-analysis">#</a> Syntax Analysis</h3>',5),o=(0,i.Wm)("li",null,"parser",-1),c={href:"https://en.wikipedia.org/wiki/Parse_tree",target:"_blank",rel:"noopener noreferrer"},d=(0,i.Uk)("parse tree"),h=(0,i.Uk)(" 생성 "),m=(0,i.Wm)("ul",null,[(0,i.Wm)("li",null,"CFG 로")],-1),u=(0,i.Wm)("h3",{id:"semantic-analysis"},[(0,i.Wm)("a",{class:"header-anchor",href:"#semantic-analysis"},"#"),(0,i.Uk)(" Semantic Analysis")],-1),g={href:"https://en.wikipedia.org/wiki/Semantic_analysis_(compilers)",target:"_blank",rel:"noopener noreferrer"},p=(0,i.Uk)("영문 위키"),y=(0,i.Wm)("li",null,"파싱 후 필수적인 semantic 정보를 얻기 위함.",-1),f=(0,i.uE)('<h3 id="intermediate-code-generator"><a class="header-anchor" href="#intermediate-code-generator">#</a> Intermediate Code Generator</h3><h3 id="code-optimizer"><a class="header-anchor" href="#code-optimizer">#</a> Code Optimizer</h3><h3 id="target-code-generator"><a class="header-anchor" href="#target-code-generator">#</a> Target Code Generator</h3><h2 id="에러"><a class="header-anchor" href="#에러">#</a> 에러</h2><ul><li>Compile-Time Error <ul><li>Lexical: This includes misspellings of identifiers, keywords or operators.</li><li>Syntactical: missing semicolon or unbalanced parenthesis.</li><li>Semantical: incompatible value assignment or type mismatches between operator and operand.</li><li>Logical: code not reachable, infinite loop.</li></ul></li></ul>',5),k={render:function(e,l){const a=(0,i.up)("OutboundLink");return(0,i.wg)(),(0,i.j4)(i.HY,null,[r,(0,i.Wm)("blockquote",null,[(0,i.Wm)("p",null,[(0,i.Wm)("a",t,[n,(0,i.Wm)(a)])])]),s,(0,i.Wm)("ul",null,[o,(0,i.Wm)("li",null,[(0,i.Wm)("a",c,[d,(0,i.Wm)(a)]),h,m])]),u,(0,i.Wm)("ul",null,[(0,i.Wm)("li",null,[(0,i.Wm)("a",g,[p,(0,i.Wm)(a)])]),y]),f],64)}}},5442:(e,l,a)=>{"use strict";a.r(l),a.d(l,{data:()=>i});const i={key:"v-2fa44864",path:"/2021/06/19/compiler-design.html",title:"컴파일러 디자인 요약",lang:"ko-KR",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",sidebar:"auto"},excerpt:"",headers:[{level:2,title:"컴파일러 페이즈",slug:"컴파일러-페이즈",children:[{level:3,title:"Lexical Analysis",slug:"lexical-analysis",children:[]},{level:3,title:"Syntax Analysis",slug:"syntax-analysis",children:[]},{level:3,title:"Semantic Analysis",slug:"semantic-analysis",children:[]},{level:3,title:"Intermediate Code Generator",slug:"intermediate-code-generator",children:[]},{level:3,title:"Code Optimizer",slug:"code-optimizer",children:[]},{level:3,title:"Target Code Generator",slug:"target-code-generator",children:[]}]},{level:2,title:"에러",slug:"에러",children:[]}],filePathRelative:"_posts/202106/2021-06-19-compiler-design.md",git:{updatedTime:1624107827e3}}}}]);