(self.webpackChunktil=self.webpackChunktil||[]).push([[1818],{4022:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>bs});var e=a(6252);const p=(0,e.uE)('<h1 id="시작하기"><a class="header-anchor" href="#시작하기">#</a> 시작하기</h1><h2 id="installation"><a class="header-anchor" href="#installation">#</a> Installation</h2><h3 id="다운로드와-설치"><a class="header-anchor" href="#다운로드와-설치">#</a> 다운로드와 설치</h3>',3),t={href:"https://github.com/denoland/deno_install",target:"_blank",rel:"noopener noreferrer"},o=(0,e.Uk)("deno_install"),l=(0,e.Uk)("에서 제공"),c=(0,e.uE)('<details class="custom-container details"><summary>목록</summary><h4 id="using-shell-macos-and-linux"><a class="header-anchor" href="#using-shell-macos-and-linux">#</a> Using Shell (macOS and Linux)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> -fsSL <span class="token operator">&lt;</span>https://deno.land/x/install/install.sh<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token function">sh</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-powershell-windows"><a class="header-anchor" href="#using-powershell-windows">#</a> Using PowerShell (Windows)</h4><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token function">iwr</span> &lt;https:<span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>install<span class="token operator">/</span>install<span class="token punctuation">.</span>ps1&gt; <span class="token operator">-</span>useb <span class="token punctuation">|</span> <span class="token function">iex</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-scoop-windows"><a class="header-anchor" href="#using-scoop-windows">#</a> Using Scoop (Windows)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scoop <span class="token function">install</span> deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-chocolatey-windows"><a class="header-anchor" href="#using-chocolatey-windows">#</a> Using Chocolatey (Windows)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>choco <span class="token function">install</span> deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-homebrew-macos"><a class="header-anchor" href="#using-homebrew-macos">#</a> Using Homebrew (macOS)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew <span class="token function">install</span> deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-nix-macos-and-linux"><a class="header-anchor" href="#using-nix-macos-and-linux">#</a> Using Nix (macOS and Linux)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nix-shell -p deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="build-and-install-from-source-using-cargo"><a class="header-anchor" href="#build-and-install-from-source-using-cargo">#</a> Build and install from source using Cargo</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>cargo <span class="token function">install</span> deno --locked\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></details>',1),r={href:"https://github.com/denoland/deno/releases",target:"_blank",rel:"noopener noreferrer"},u=(0,e.Uk)("메뉴얼 하게 설치"),i=(0,e.Uk)(". "),k=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"These packages contain just a single executable file."),(0,e.Wm)("li",null,"You will have to set the executable bit on macOS and Linux.")],-1),m=(0,e.Uk)("공식 Docker 이미지는 아직("),d={href:"https://github.com/denoland/deno/issues/3356",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("#issue#3356"),h=(0,e.Uk)(") "),g={href:"https://github.com/hayd/deno-docker",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("커뮤니티 이미지"),v=(0,e.Uk)("는 있음"),y=(0,e.uE)('<h3 id="설치-테스트"><a class="header-anchor" href="#설치-테스트">#</a> 설치 테스트</h3><ul><li><a href="#command-line-interface">deno cli</a> 참고</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno --version\n<span class="token comment"># flags / usages</span>\ndeno <span class="token builtin class-name">help</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="업데이트"><a class="header-anchor" href="#업데이트">#</a> 업데이트</h3><p><code>github.com/denoland/deno/releases</code>로 부터 최신 릴리즈를 가져옴</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno upgrade\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>특정 버전 설치도 가능</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno upgrade --version <span class="token number">1.0</span>.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="빌드"><a class="header-anchor" href="#빌드">#</a> 빌드</h3>',9),q=(0,e.Wm)("code",null,"Contributing",-1),W=(0,e.Uk)(" 챕터"),w=(0,e.Uk)(" 참고"),x=(0,e.Wm)("h2",{id:"환경설정"},[(0,e.Wm)("a",{class:"header-anchor",href:"#환경설정"},"#"),(0,e.Uk)(" 환경설정")],-1),_=(0,e.Wm)("h3",{id:"환경변수"},[(0,e.Wm)("a",{class:"header-anchor",href:"#환경변수"},"#"),(0,e.Uk)(" 환경변수")],-1),U=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"DENO_DIR"),(0,e.Uk)(" defaults to "),(0,e.Wm)("code",null,"$HOME/.cache/deno"),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"메뉴얼하게 지정도 가능")])],-1),S=(0,e.Wm)("code",null,"NO_COLOR",-1),E=(0,e.Uk)(": output 색상 끄기 "),j={href:"https://no-color.org/",target:"_blank",rel:"noopener noreferrer"},P=(0,e.Uk)("https://no-color.org/"),C=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"--allow-env"),(0,e.Uk)(" 없이 "),(0,e.Wm)("code",null,"NO_COLOR"),(0,e.Uk)("를 테스트 가능: "),(0,e.Wm)("code",null,"Deno.noColor")],-1),T=(0,e.uE)('<h3 id="쉘-자동완성"><a class="header-anchor" href="#쉘-자동완성">#</a> 쉘 자동완성</h3><ul><li><code>deno completions &lt;shell&gt;</code> command를 사용하여 completion script를 생성가능. <ul><li><code>stdout</code>으로 나오니까 적절한 파일에 redirection 해야함.</li></ul></li></ul><h4 id="지원되는-쉘"><a class="header-anchor" href="#지원되는-쉘">#</a> 지원되는 쉘</h4><ul><li>zsh</li><li>bash</li><li>fish</li><li>powershell</li><li>elvish</li></ul><details class="custom-container details"><summary>예시</summary><p><strong>bash 예시</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno completions <span class="token function">bash</span> <span class="token operator">&gt;</span> /usr/local/etc/bash_completion.d/deno.bash\n<span class="token builtin class-name">source</span> /usr/local/etc/bash_completion.d/deno.bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>zsh 예시</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/.zsh <span class="token comment"># create a folder to save your completions. it can be anywhere</span>\ndeno completions <span class="token function">zsh</span> <span class="token operator">&gt;</span> ~/.zsh/_deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>그리고 <code>.zshrc</code>에 넣기</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">fpath</span><span class="token operator">=</span><span class="token punctuation">(</span>~/.zsh <span class="token variable">$fpath</span><span class="token punctuation">)</span>\nautoload -Uz compinit\ncompinit -u\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>이후 터미널 재시작 <ul><li>안될 경우 <code>rm ~/.zcompdump/</code> 로 이전 컴플리션 지우고 <code>compinit</code>으로 재생성</li></ul></li></ul><p><strong>(zsh + oh-my-zsh) 예시 <code>[recommended for zsh users]</code></strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/.oh-my-zsh/custom/plugins/deno\ndeno completions <span class="token function">zsh</span> <span class="token operator">&gt;</span> ~/.oh-my-zsh/custom/plugins/deno/_deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>After this add deno plugin under plugins tag in <code>~/.zshrc</code> file.</li><li>for tools like <code>antigen</code> path will be <code>~/.antigen/bundles/robbyrussell/oh-my-zsh/plugins</code> and command will be <code>antigen bundle</code> deno and so on.</li></ul><p><strong>powershell 예시</strong></p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>deno completions powershell &gt;&gt; <span class="token variable">$profile</span>\n<span class="token punctuation">.</span><span class="token variable">$profile</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>default: <code>$HOME\\Documents\\WindowsPowerShell\\MicrosoftPowerShell_profile.ps1</code><ul><li>it will be run whenever you launch the PowerShell.</li></ul></li></ul></details><h3 id="에디터와-ide"><a class="header-anchor" href="#에디터와-ide">#</a> 에디터와 IDE</h3><ul><li>현재시점에선 에디터에서 사용이 불완전해서 커뮤니티에서 각자만의 방법을 고안했음</li></ul><h4 id="vs-code"><a class="header-anchor" href="#vs-code">#</a> VS Code</h4>',8),L={href:"https://github.com/denoland/vscode_deno",target:"_blank",rel:"noopener noreferrer"},D=(0,e.Uk)("vscode_deno"),I={href:"https://marketplace.visualstudio.com/items?itemName=denoland.vscode-deno",target:"_blank",rel:"noopener noreferrer"},A=(0,e.Uk)("visual studio marketplace"),O={class:"custom-container details"},z=(0,e.Wm)("summary",null,"더보기",-1),B=(0,e.Wm)("h4",{id:"jetbrains-ides"},[(0,e.Wm)("a",{class:"header-anchor",href:"#jetbrains-ides"},"#"),(0,e.Uk)(" JetBrains IDEs")],-1),R={href:"https://plugins.jetbrains.com/plugin/14382-deno",target:"_blank",rel:"noopener noreferrer"},H=(0,e.Uk)("Deno plugin"),M=(0,e.Wm)("li",null,[(0,e.Uk)("Once installed, replace the content "),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("of "),(0,e.Wm)("code",null,"External Libraries > Deno Library > lib > lib.deno.d.ts")]),(0,e.Wm)("li",null,[(0,e.Uk)("with the output of "),(0,e.Wm)("code",null,"deno types"),(0,e.Uk)(".")])])],-1),$=(0,e.Wm)("li",null,"매번 deno 가 업데이트할때마다 설치해야한다.",-1),N=(0,e.Wm)("h4",{id:"vim-and-neovim"},[(0,e.Wm)("a",{class:"header-anchor",href:"#vim-and-neovim"},"#"),(0,e.Uk)(" Vim and NeoVim")],-1),F={href:"https://github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"},V=(0,e.Uk)("CoC"),J=(0,e.Uk)(" (intellisense engine and language server protocol)"),K={href:"https://github.com/dense-analysis/ale",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Uk)("ALE"),G=(0,e.Uk)(" (syntax checker and language server protocol client)"),Q=(0,e.uE)('<h5 id="coc"><a class="header-anchor" href="#coc">#</a> CoC</h5><ul><li><code>:CocInstall coc-tsserver</code></li><li><code>:CocInstall coc-deno</code></li><li><code>:CocCommand deno.initializeWorkspace</code></li><li><code>gd</code> (go to definition), <code>gr</code> (goto/find references) 가 작동</li></ul><h5 id="ale"><a class="header-anchor" href="#ale">#</a> ALE</h5>',3),X=(0,e.Wm)("li",null,[(0,e.Wm)("p",null,"특별한 추가 configuration 이 없다.")],-1),Z=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"$PATH"),(0,e.Uk)(" 에 executable 이 위치하 않거나, "),(0,e.Wm)("code",null,"deno"),(0,e.Uk)("라는 이름이 아니거나, unstable features/APIs 사용할 때")],-1),nn=(0,e.Wm)("li",null,"Override ALE's default values.",-1),sn={href:"https://github.com/dense-analysis/ale/blob/master/doc/ale-typescript.txt",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Wm)("code",null,":help ale-typescript",-1),en=(0,e.uE)("<li><p>지원</p><ul><li>autocompletion</li><li>refactoring</li><li>going to definition,</li></ul></li><li><p>key bindings 은 메뉴얼하게 설정</p></li><li><p>설정을 위해 Copy the snippet below into your <code>vimrc/init.vim</code></p></li><li><p><code>deno fmt</code>: 포매팅</p><ul><li>ale_linter setting needs to be set either on a per buffer basis <ul><li><code>(let b:ale_linter = [&#39;deno&#39;])</code></li></ul></li><li>or globally for all TypeScript files <ul><li><code>(let g:ale_fixers={&#39;typescript&#39;: [&#39;deno&#39;]}</code>)</li></ul></li></ul></li>",4),pn=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>&quot; Use <span class="token constant">ALE</span> autocompletion <span class="token keyword">with</span> Vim<span class="token string">&#39;s &#39;</span>omnifunc&#39; <span class="token function">setting</span> <span class="token punctuation">(</span>press <span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">-</span>x<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">-</span>o<span class="token operator">&gt;</span> <span class="token keyword">in</span> insert mode<span class="token punctuation">)</span>\nautocmd FileType typescript <span class="token keyword">set</span> omnifunc<span class="token operator">=</span>ale#completion#OmniFunc\n\n&quot; Make sure to use map instead <span class="token keyword">of</span> noremap when using <span class="token generic-function"><span class="token function">a</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> expression <span class="token keyword">as</span> the <span class="token punctuation">{</span>rhs<span class="token punctuation">}</span>\nnmap <span class="token generic-function"><span class="token function">gr</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_rename<span class="token punctuation">)</span>\nnmap <span class="token generic-function"><span class="token function">gR</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_find_reference<span class="token punctuation">)</span>\nnmap <span class="token generic-function"><span class="token function">gd</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_go_to_definition<span class="token punctuation">)</span>\nnmap <span class="token generic-function"><span class="token function">gD</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_go_to_type_definition<span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> g<span class="token operator">:</span>ale_fixers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;typescript&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;deno&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n<span class="token keyword">let</span> g<span class="token operator">:</span>ale_fix_on_save <span class="token operator">=</span> <span class="token number">1</span> &quot; run deno fmt when saving a buffer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="emacs"><a class="header-anchor" href="#emacs">#</a> Emacs</h4>',2),tn={href:"https://github.com/justjavac/typescript-deno-plugin",target:"_blank",rel:"noopener noreferrer"},on=(0,e.Uk)("typescript-deno-plugin"),ln={href:"https://github.com/denoland/vscode_deno",target:"_blank",rel:"noopener noreferrer"},cn=(0,e.Uk)("official VSCode extension"),rn=(0,e.uE)('<p><code>tide</code> is setup for your instance of Emacs</p><ul><li><code>npm install --save-dev typescript-deno-plugin</code></li><li>(<code>npm init -y</code> as necessary)</li><li><code>tsconfig.json</code> and you are off to the races!</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescript-deno-plugin&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// default is `true`</span>\n        <span class="token property">&quot;importmap&quot;</span><span class="token operator">:</span> <span class="token string">&quot;import_map.json&quot;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="atom"><a class="header-anchor" href="#atom">#</a> Atom</h4>',4),un={href:"https://atom.io/packages/atom-ide-base",target:"_blank",rel:"noopener noreferrer"},kn=(0,e.Uk)("atom-ide-base"),mn={href:"https://atom.io/packages/atom-ide-deno",target:"_blank",rel:"noopener noreferrer"},dn=(0,e.Uk)("atom-ide-deno"),bn=(0,e.Wm)("h4",{id:"lsp-clients"},[(0,e.Wm)("a",{class:"header-anchor",href:"#lsp-clients"},"#"),(0,e.Uk)(" LSP clients")],-1),hn={href:"https://langserver.org/",target:"_blank",rel:"noopener noreferrer"},gn=(0,e.Uk)("Language server protocol"),fn=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"version 1.6.0 or later."),(0,e.Wm)("li",null,[(0,e.Uk)("If your editor supports the LSP "),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"can use Deno as a language server for TypeScript and JavaScript.")])])],-1),vn=(0,e.Wm)("p",null,[(0,e.Uk)("The editor can start the server with "),(0,e.Wm)("code",null,"deno lsp"),(0,e.Uk)(".")],-1),yn=(0,e.Wm)("h5",{id:"example-for-kakoune"},[(0,e.Wm)("a",{class:"header-anchor",href:"#example-for-kakoune"},"#"),(0,e.Uk)(" Example for Kakoune")],-1),qn={href:"https://github.com/kak-lsp/kak-lsp",target:"_blank",rel:"noopener noreferrer"},Wn=(0,e.Wm)("code",null,"kak-lsp",-1),wn=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"kak-lsp.toml")],-1),xn=(0,e.uE)('<div class="language-toml ext-toml line-numbers-mode"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">language.deno</span><span class="token punctuation">]</span>\n<span class="token key property">filetypes</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">]</span>\n<span class="token key property">roots</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;.git&quot;</span><span class="token punctuation">]</span>\n<span class="token key property">command</span> <span class="token punctuation">=</span> <span class="token string">&quot;deno&quot;</span>\n<span class="token key property">args</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;lsp&quot;</span><span class="token punctuation">]</span>\n\n<span class="token punctuation">[</span><span class="token table class-name">language.deno.initialization_options</span><span class="token punctuation">]</span>\n<span class="token key property">enable</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>\n<span class="token key property">lint</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h5 id="example-for-vim-neovim"><a class="header-anchor" href="#example-for-vim-neovim">#</a> Example for Vim/Neovim</h5>',2),_n=(0,e.Uk)("install "),Un={href:"https://github.com/prabirshrestha/vim-lsp",target:"_blank",rel:"noopener noreferrer"},Sn=(0,e.Wm)("code",null,"vim-lsp",-1),En=(0,e.Wm)("li",null,[(0,e.Uk)("add "),(0,e.Wm)("code",null,"vimrc/init.vim")],-1),jn=(0,e.uE)('<div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token keyword">if</span> <span class="token function">executable</span><span class="token punctuation">(</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">)</span>\n  augroup LspTypeScript\n    <span class="token builtin">autocmd</span><span class="token operator">!</span>\n    <span class="token builtin">autocmd</span> User lsp_setup <span class="token keyword">call</span> <span class="token builtin">lsp</span>#<span class="token function">register_server</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    \\ <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;deno lsp&quot;</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;cmd&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>server_info <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lsp&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;root_uri&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>server_info<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token builtin">lsp</span>#utils#<span class="token function">path_to_uri</span><span class="token punctuation">(</span><span class="token builtin">lsp</span>#utils#<span class="token function">find_nearest_parent_file_directory</span><span class="token punctuation">(</span><span class="token builtin">lsp</span>#utils#<span class="token function">get_buffer_path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;tsconfig.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;allowlist&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;typescript.tsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;initialization_options&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    \\     <span class="token string">&quot;enable&quot;</span><span class="token punctuation">:</span> v<span class="token punctuation">:</span>true<span class="token punctuation">,</span>\n    \\     <span class="token string">&quot;lint&quot;</span><span class="token punctuation">:</span> v<span class="token punctuation">:</span>true<span class="token punctuation">,</span>\n    \\     <span class="token string">&quot;unstable&quot;</span><span class="token punctuation">:</span> v<span class="token punctuation">:</span>true<span class="token punctuation">,</span>\n    \\   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \\ <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  augroup END\n<span class="token keyword">endif</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h5 id="example-for-sublime-text"><a class="header-anchor" href="#example-for-sublime-text">#</a> Example for Sublime Text</h5>',2),Pn=(0,e.Uk)("Install the "),Cn={href:"https://packagecontrol.io/packages/LSP",target:"_blank",rel:"noopener noreferrer"},Tn=(0,e.Uk)("Sublime LSP package"),Ln=(0,e.Uk)("Install the "),Dn={href:"https://packagecontrol.io/packages/TypeScript",target:"_blank",rel:"noopener noreferrer"},In=(0,e.Uk)("TypeScript package"),An=(0,e.Uk)(" to get syntax highlighting"),On=(0,e.Wm)("li",null,[(0,e.Uk)("Add the following "),(0,e.Wm)("code",null,".sublime-project"),(0,e.Uk)(" file to your project folder")],-1),zn=(0,e.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;LSP&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;deno&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;lsp&quot;</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;initializationOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// &quot;config&quot;: &quot;&quot;, // Sets the path for the config file in your project</span>\n          <span class="token property">&quot;enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token comment">// &quot;importMap&quot;: &quot;&quot;, // Sets the path for the import-map in your project</span>\n          <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;unstable&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;languages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/Babel/JavaScript (Babel).sublime-syntax&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/JavaScript/JavaScript.sublime-syntax&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;javascriptreact&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.jsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/Babel/JavaScript (Babel).sublime-syntax&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/JavaScript/JavaScript.sublime-syntax&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/TypeScript-TmLanguage/TypeScript.tmLanguage&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/TypeScript Syntax/TypeScript.tmLanguage&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescriptreact&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.tsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/TypeScript-TmLanguage/TypeScriptReact.tmLanguage&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/TypeScript Syntax/TypeScriptReact.tmLanguage&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div>',1),Bn=(0,e.uE)('<h2 id="첫-걸음마"><a class="header-anchor" href="#첫-걸음마">#</a> 첫 걸음마</h2><ul><li><code>async/await</code> 먼저</li></ul><h3 id="hello-world"><a class="header-anchor" href="#hello-world">#</a> Hello World</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Welcome to Deno!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run <span class="token operator">&lt;</span>https://deno.land/std@0.95.0/examples/welcome.ts<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="http-요청-만들기"><a class="header-anchor" href="#http-요청-만들기">#</a> HTTP 요청 만들기</h3>',6),Rn={href:"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API",target:"_blank",rel:"noopener noreferrer"},Hn=(0,e.Uk)("fetch API"),Mn=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> url <span class="token operator">=</span> Deno<span class="token punctuation">.</span>args<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// application 의 first argument 에 pass, url 상수에 저장</span>\n<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//  요청</span>\n\n<span class="token comment">// response body를 ArrayBuffer로 parse, response 기다림, 그 후 body 에 저장</span>\n<span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">arrayBuffer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n\n<span class="token keyword">await</span> Deno<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// stdout에 write</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 잘못된 예시</span>\ndeno run https://deno.land/std@0.95.0/examples/curl.ts https://example.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># permission flag 와 함께</span>\ndeno run --allow-net<span class="token operator">=</span>example.com https://deno.land/std@0.95.0/examples/curl.ts https://example.com\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="파일-읽기"><a class="header-anchor" href="#파일-읽기">#</a> 파일 읽기</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> filenames <span class="token operator">=</span> Deno<span class="token punctuation">.</span>args<span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> filename <span class="token keyword">of</span> filenames<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> file <span class="token operator">=</span> <span class="token keyword">await</span> Deno<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">await</span> Deno<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> Deno<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  file<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><code>copy()</code>: kernel→userspace→kernel copies.</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run --allow-read <span class="token operator">&lt;</span>https://deno.land/std@0.95.0/examples/cat.ts<span class="token operator">&gt;</span> /etc/passwd\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="tcp-서버"><a class="header-anchor" href="#tcp-서버">#</a> TCP 서버</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> hostname <span class="token operator">=</span> <span class="token string">&quot;0.0.0.0&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">8080</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> listener <span class="token operator">=</span> Deno<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">{</span> hostname<span class="token punctuation">,</span> port <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Listening on </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hostname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> conn <span class="token keyword">of</span> listener<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  Deno<span class="token punctuation">.</span><span class="token function">copy</span><span class="token punctuation">(</span>conn<span class="token punctuation">,</span> conn<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run --allow-net <span class="token operator">&lt;</span>https://deno.land/std@0.95.0/examples/echo_server.ts<span class="token operator">&gt;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>test: sending data to it with netcat:</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">nc</span> localhost <span class="token number">8080</span>\nhello world\nhello world\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><code>cat.ts</code> 예시같이, <code>copy()</code> 도 불필요한 memory copy 를 만들지 않는다.</li><li>패킷을 커널로부터 받고 다시 보내는 원리다.</li></ul><h3 id="더-많은-예시"><a class="header-anchor" href="#더-많은-예시">#</a> 더 많은 예시</h3>',14),$n=(0,e.Uk)("Examples"),Nn=(0,e.Uk)(" 참고"),Fn=(0,e.uE)('<h2 id="command-line-interface"><a class="header-anchor" href="#command-line-interface">#</a> Command line interface</h2><ul><li><code>help</code> 사용해서 알아보기</li></ul><details class="custom-container details"><summary>예시</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Using the subcommand.</span>\ndeno <span class="token builtin class-name">help</span>\n\n<span class="token comment"># Using the short flag -- outputs the same as above.</span>\ndeno -h\n\n<span class="token comment"># Using the long flag -- outputs more detailed help text where available.</span>\ndeno --help\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno <span class="token builtin class-name">help</span> bundle\ndeno bundle -h\ndeno bundle --help\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></details><h3 id="스크립트-소스"><a class="header-anchor" href="#스크립트-소스">#</a> 스크립트 소스</h3><ul><li>stdin: <code>-</code></li><li>url, file 명은 그대로</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run main.ts\ndeno run https://mydomain.com/main.ts\n<span class="token function">cat</span> main.ts <span class="token operator">|</span> deno run -\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="스크립트-아규먼트"><a class="header-anchor" href="#스크립트-아규먼트">#</a> 스크립트 아규먼트</h3><ul><li>flag 외 사용자 지정 argument 설정 가능</li></ul><details class="custom-container details"><summary>예시</summary><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run main.ts a b -c --quiet\n// main.ts\nconsole.log<span class="token punctuation">(</span>Deno.args<span class="token punctuation">)</span><span class="token punctuation">;</span> // <span class="token punctuation">[</span> <span class="token string">&quot;a&quot;</span>, <span class="token string">&quot;b&quot;</span>, <span class="token string">&quot;-c&quot;</span>, <span class="token string">&quot;--quiet&quot;</span> <span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Good. We grant net permission to net_client.ts / runtime-flag</span>\n\ndeno run --allow-net net_client.ts\n\n<span class="token comment"># Bad! --allow-net was passed to Deno.args, throws a net permission error / script-flag</span>\n\ndeno run net_client.ts --allow-net\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></details><ul><li>a non-positional flag is parsed differently depending on its position.</li></ul><details class="custom-container details"><summary>이유</summary><ol><li>runtime flag 와 script flag 를 구분하는 가장 논리적인 방법임</li><li>가장 ergonomic 한 방법임<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></li><li>다른 유명한 런타임 (node.js ㅋㅋ) 에서도 마찬가지 방법이기 때문</li></ol><ul><li>Try <code>node -c index.js</code> and <code>node index.js -c</code>.</li><li>The first will only do a syntax check on <code>index.js</code> as per Node&#39;s <code>-c</code> flag.</li><li>The second will execute index.js with <code>-c</code> passed to <code>require(&quot;process&quot;).argv</code>.</li></ul></details><h3 id="watch-모드"><a class="header-anchor" href="#watch-모드">#</a> Watch 모드</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run --watch --unstable main.ts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="integrity-플래그"><a class="header-anchor" href="#integrity-플래그">#</a> Integrity 플래그</h3>',14),Vn=(0,e.Uk)("integrity checking"),Jn=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"deno cache"),(0,e.Uk)(", "),(0,e.Wm)("code",null,"deno run"),(0,e.Uk)(", "),(0,e.Wm)("code",null,"deno test"),(0,e.Uk)(" 에 영향을 미침")],-1),Kn=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>--lock <span class="token operator">&lt;</span>FILE<span class="token operator">&gt;</span>    <span class="token comment"># Check the specified lock file</span>\n--lock-write     <span class="token comment"># Write lock file. Use with --lock.</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="캐시와-compilation-플래그"><a class="header-anchor" href="#캐시와-compilation-플래그">#</a> 캐시와 compilation 플래그</h3><ul><li><code>deno cache</code>, <code>deno run</code>, <code>deno test</code> 에 영향을 미침</li><li>module resolution, compilation configuration etc...에도</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>--config <span class="token operator">&lt;</span>FILE<span class="token operator">&gt;</span>               <span class="token comment"># Load tsconfig.json configuration file</span>\n--import-map <span class="token operator">&lt;</span>FILE<span class="token operator">&gt;</span>           <span class="token comment"># UNSTABLE: Load import map file</span>\n--no-remote                   <span class="token comment"># Do not resolve remote modules</span>\n--reload<span class="token operator">=</span><span class="token operator">&lt;</span>CACHE_BLOCKLIST<span class="token operator">&gt;</span>    <span class="token comment"># Reload source code cache (recompile TypeScript)</span>\n--unstable                    <span class="token comment"># Enable unstable APIs</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="런타임-플래그"><a class="header-anchor" href="#런타임-플래그">#</a> 런타임 플래그</h3><ul><li><code>deno run</code>, <code>deno test</code> 에 영향을 미침</li></ul><h4 id="permission-플래그"><a class="header-anchor" href="#permission-플래그">#</a> Permission 플래그</h4><blockquote><p><a href="#permissions">permissions</a> 참조</p></blockquote><h4 id="다른-런타임-플래그"><a class="header-anchor" href="#다른-런타임-플래그">#</a> 다른 런타임 플래그</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>--cached-only                <span class="token comment"># Require that remote dependencies are already cached</span>\n--inspect<span class="token operator">=</span><span class="token operator">&lt;</span>HOST:PORT<span class="token operator">&gt;</span>        <span class="token comment"># activate inspector on host:port ...</span>\n--inspect-brk<span class="token operator">=</span><span class="token operator">&lt;</span>HOST:PORT<span class="token operator">&gt;</span>    <span class="token comment"># activate inspector on host:port and break at ...</span>\n--seed <span class="token operator">&lt;</span>NUMBER<span class="token operator">&gt;</span>              <span class="token comment"># Seed Math.random()</span>\n--v8-flags<span class="token operator">=</span><span class="token operator">&lt;</span>v8-flags<span class="token operator">&gt;</span>        <span class="token comment"># Set V8 command line options. For help: ...</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="permissions"><a class="header-anchor" href="#permissions">#</a> Permissions</h2>',11),Yn=(0,e.Uk)("deno permission"),Gn=(0,e.Uk)(" 참조"),Qn=(0,e.Wm)("h2",{id:"웹어셈블리-사용하기"},[(0,e.Wm)("a",{class:"header-anchor",href:"#웹어셈블리-사용하기"},"#"),(0,e.Uk)(" 웹어셈블리 사용하기")],-1),Xn={href:"https://developer.mozilla.org/en-US/docs/WebAssembly",target:"_blank",rel:"noopener noreferrer"},Zn=(0,e.Uk)("WebAssembly mdn"),ns={href:"https://webassembly.org/",target:"_blank",rel:"noopener noreferrer"},ss=(0,e.Uk)("WebAssembly official"),as=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> wasmCode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">133</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">96</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span>\n  <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">129</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">145</span><span class="token punctuation">,</span>\n  <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">109</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span>\n  <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>\n  <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">11</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wasmModule <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebAssembly</span><span class="token punctuation">.</span><span class="token function">Module</span><span class="token punctuation">(</span>wasmCode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wasmInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebAssembly</span><span class="token punctuation">.</span><span class="token function">Instance</span><span class="token punctuation">(</span>wasmModule<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> main <span class="token operator">=</span> wasmInstance<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>main <span class="token keyword">as</span> CallableFunction\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>파일에선</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> wasmCode <span class="token operator">=</span> <span class="token keyword">await</span> Deno<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&quot;main.wasm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wasmModule <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebAssembly</span><span class="token punctuation">.</span><span class="token function">Module</span><span class="token punctuation">(</span>wasmCode<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> wasmInstance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WebAssembly</span><span class="token punctuation">.</span><span class="token function">Instance</span><span class="token punctuation">(</span>wasmModule<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> main <span class="token operator">=</span> wasmInstance<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>main <span class="token keyword">as</span> CallableFunction<span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="디버깅"><a class="header-anchor" href="#디버깅">#</a> 디버깅</h2>',4),es={href:"https://v8.dev/docs/inspector",target:"_blank",rel:"noopener noreferrer"},ps=(0,e.Uk)("V8 Inspector Protocol"),ts=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"크롬 개발자도구나, vscode 같이 해당 프로토콜을 지원하는 클라이언트에서 디버깅 가능하단 이야기")],-1),os=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"--inspect"),(0,e.Uk)(": breaktime")],-1),ls=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"--inspect-brk"),(0,e.Uk)(": 첫줄부터")],-1),cs=(0,e.Wm)("h3",{id:"크롬-개발자-도구"},[(0,e.Wm)("a",{class:"header-anchor",href:"#크롬-개발자-도구"},"#"),(0,e.Uk)(" 크롬 개발자 도구")],-1),rs={href:"https://deno.land/std@0.95.0/http/file_server.ts",target:"_blank",rel:"noopener noreferrer"},us=(0,e.Wm)("code",null,"file_server.ts",-1),is=(0,e.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ deno run --inspect-brk --allow-read --allow-net https://deno.land/std@0.95.0/http/file_server.ts\nDebugger listening on ws://127.0.0.1:9229/ws/1e82c406-85a9-44ab-86b6-7341583480b1\nDownload https://deno.land/std@0.95.0/http/file_server.ts\nCompile https://deno.land/std@0.95.0/http/file_server.ts\n<span class="token punctuation">..</span>.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><code>chrome://inspect</code> - inspect</li></ul><p><img src="https://deno.land/x/deno@v1.9.2/docs/images/debugger1.jpg" alt="chrome://inspect"></p><p><img src="https://deno.land/x/deno@v1.9.2/docs/images/debugger2.jpg" alt="Devtools opened"></p><ul><li><code>file_server.ts</code> 대신 <code>_constants.ts</code> 에서 시작하는데, 후자가 전자의 left-most, bottom-most dependency 이기 때문이다.</li><li>그러니 <code>file_server.ts</code>를 열고 break point 를 찍자.</li></ul><p><img src="https://deno.land/x/deno@v1.9.2/docs/images/debugger3.jpg" alt="Open file_server.ts"></p><ul><li>보통글씨: 컴파일 된 파일(<code>js</code>)</li><li>이탤릭: 소스맵</li></ul><p><code>listenAndServe</code> 메소드에 breakpoint</p><p><img src="https://deno.land/x/deno@v1.9.2/docs/images/debugger4.jpg" alt="Break in file_server.ts"></p><ul><li>다시 실행하고, request 보내고 inspect</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> http://0.0.0.0:4507/\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://deno.land/x/deno@v1.9.2/docs/images/debugger5.jpg" alt="Break in request handling"></p><h3 id="vscode"><a class="header-anchor" href="#vscode">#</a> VSCode</h3>',13),ks={href:"https://github.com/denoland/vscode_deno/issues/12",target:"_blank",rel:"noopener noreferrer"},ms=(0,e.Uk)("작업 이슈"),ds=(0,e.uE)('<ul><li><code>launch.json</code> config</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0.2.0&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;configurations&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Deno&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pwa-node&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;request&quot;</span><span class="token operator">:</span> <span class="token string">&quot;launch&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;cwd&quot;</span><span class="token operator">:</span> <span class="token string">&quot;${workspaceFolder}&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;runtimeExecutable&quot;</span><span class="token operator">:</span> <span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;runtimeArgs&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;run&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;--inspect-brk&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-A&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;${file}&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;attachSimplePort&quot;</span><span class="token operator">:</span> <span class="token number">9229</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="custom-container warning"><p class="custom-container-title">NOTE</p><p>This uses the file you have open as the entry point; replace <code>${file}</code> with a script name if you want a fixed entry point.</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// server.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> serve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;https://deno.land/std@0.95.0/http/server.ts&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">serve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> port<span class="token operator">:</span> <span class="token number">8000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;http://localhost:8000/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token keyword">const</span> req <span class="token keyword">of</span> server<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  req<span class="token punctuation">.</span><span class="token function">respond</span><span class="token punctuation">(</span><span class="token punctuation">{</span> body<span class="token operator">:</span> <span class="token string">&quot;Hello World\\n&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="https://deno.land/x/deno@v1.9.2/docs/images/debugger7.jpg" alt="VSCode debugger"></p><h3 id="jetbrains-ides-debug"><a class="header-anchor" href="#jetbrains-ides-debug">#</a> JetBrains IDEs debug</h3><ul><li>마우스 오른쪽 클릭 - <code>&#39;Deno: &lt;file name&gt;&#39;</code> option.</li><li>edit the run/debug configuration</li><li>modify the <code>Arguments</code> field with the required flags (permission).</li></ul><h3 id="other"><a class="header-anchor" href="#other">#</a> Other</h3><ul><li>devtools protocol 이 구현되어있다면야...</li></ul><h3 id="한계"><a class="header-anchor" href="#한계">#</a> 한계</h3><ul><li>autocomplete in Devtools&#39; console causes the Deno process to exit.</li><li>profiling and memory dumps might not work correctly.</li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>relating to or designed for efficiency and comfort in the working environment <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section>',13),bs={render:function(n,s){const a=(0,e.up)("OutboundLink"),bs=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[p,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",t,[o,(0,e.Wm)(a)]),l])]),c,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",r,[u,(0,e.Wm)(a)]),i,k]),(0,e.Wm)("li",null,[m,(0,e.Wm)("a",d,[b,(0,e.Wm)(a)]),h,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",g,[f,(0,e.Wm)(a)]),v])])])]),y,(0,e.Wm)("p",null,[(0,e.Wm)(bs,{to:"/runtime/deno/contributing.html"},{default:(0,e.w5)((()=>[q,W])),_:1}),w]),x,_,(0,e.Wm)("ul",null,[U,(0,e.Wm)("li",null,[S,E,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",j,[P,(0,e.Wm)(a)])]),C])])]),T,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",L,[D,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",I,[A,(0,e.Wm)(a)])])]),(0,e.Wm)("details",O,[z,B,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",R,[H,(0,e.Wm)(a)])]),M,$]),N,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",F,[V,(0,e.Wm)(a)]),J]),(0,e.Wm)("li",null,[(0,e.Wm)("a",K,[Y,(0,e.Wm)(a)]),G])]),Q,(0,e.Wm)("ul",null,[X,(0,e.Wm)("li",null,[Z,(0,e.Wm)("ul",null,[nn,(0,e.Wm)("li",null,[(0,e.Wm)("a",sn,[an,(0,e.Wm)(a)])])])]),en]),pn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",tn,[on,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",ln,[cn,(0,e.Wm)(a)])])]),rn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",un,[kn,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",mn,[dn,(0,e.Wm)(a)])])]),bn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",hn,[gn,(0,e.Wm)(a)]),fn])]),vn,yn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",qn,[Wn,(0,e.Wm)(a)])]),wn]),xn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[_n,(0,e.Wm)("a",Un,[Sn,(0,e.Wm)(a)])]),En]),jn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[Pn,(0,e.Wm)("a",Cn,[Tn,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[Ln,(0,e.Wm)("a",Dn,[In,(0,e.Wm)(a)]),An]),On]),zn]),Bn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",Rn,[Hn,(0,e.Wm)(a)])])]),Mn,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[(0,e.Wm)(bs,{to:"/runtime/deno/examples.html"},{default:(0,e.w5)((()=>[$n])),_:1}),Nn])]),Fn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)(bs,{to:"/runtime/deno/integrity-checking.html#integrity-checking-amp-lock-files"},{default:(0,e.w5)((()=>[Vn])),_:1})]),Jn]),Kn,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[(0,e.Wm)(bs,{to:"/runtime/deno/deno-permission.html"},{default:(0,e.w5)((()=>[Yn])),_:1}),Gn])]),Qn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",Xn,[Zn,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",ns,[ss,(0,e.Wm)(a)])])]),as,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",es,[ps,(0,e.Wm)(a)]),ts]),os,ls]),cs,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",rs,[us,(0,e.Wm)(a)])])]),is,(0,e.Wm)("blockquote",null,[(0,e.Wm)("p",null,[(0,e.Wm)("a",ks,[ms,(0,e.Wm)(a)])])]),ds],64)}}},6835:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-6ea46dbd",path:"/runtime/deno/getting-start.html",title:"시작하기",lang:"ko-KR",frontmatter:{sidebar:"auto",prev:"./introduction.md",next:"./the-runtime.md"},excerpt:"",headers:[{level:2,title:"Installation",slug:"installation",children:[{level:3,title:"다운로드와 설치",slug:"다운로드와-설치",children:[]},{level:3,title:"설치 테스트",slug:"설치-테스트",children:[]},{level:3,title:"업데이트",slug:"업데이트",children:[]},{level:3,title:"빌드",slug:"빌드",children:[]}]},{level:2,title:"환경설정",slug:"환경설정",children:[{level:3,title:"환경변수",slug:"환경변수",children:[]},{level:3,title:"쉘 자동완성",slug:"쉘-자동완성",children:[]},{level:3,title:"에디터와 IDE",slug:"에디터와-ide",children:[]}]},{level:2,title:"첫 걸음마",slug:"첫-걸음마",children:[{level:3,title:"Hello World",slug:"hello-world",children:[]},{level:3,title:"HTTP 요청 만들기",slug:"http-요청-만들기",children:[]},{level:3,title:"파일 읽기",slug:"파일-읽기",children:[]},{level:3,title:"TCP 서버",slug:"tcp-서버",children:[]},{level:3,title:"더 많은 예시",slug:"더-많은-예시",children:[]}]},{level:2,title:"Command line interface",slug:"command-line-interface",children:[{level:3,title:"스크립트 소스",slug:"스크립트-소스",children:[]},{level:3,title:"스크립트 아규먼트",slug:"스크립트-아규먼트",children:[]},{level:3,title:"Watch 모드",slug:"watch-모드",children:[]},{level:3,title:"Integrity 플래그",slug:"integrity-플래그",children:[]},{level:3,title:"캐시와 compilation 플래그",slug:"캐시와-compilation-플래그",children:[]},{level:3,title:"런타임 플래그",slug:"런타임-플래그",children:[]}]},{level:2,title:"Permissions",slug:"permissions",children:[]},{level:2,title:"웹어셈블리 사용하기",slug:"웹어셈블리-사용하기",children:[]},{level:2,title:"디버깅",slug:"디버깅",children:[{level:3,title:"크롬 개발자 도구",slug:"크롬-개발자-도구",children:[]},{level:3,title:"VSCode",slug:"vscode",children:[]},{level:3,title:"JetBrains IDEs debug",slug:"jetbrains-ides-debug",children:[]},{level:3,title:"Other",slug:"other",children:[]},{level:3,title:"한계",slug:"한계",children:[]}]}],filePathRelative:"runtime/deno/getting-start.md",git:{updatedTime:1620483371e3}}}}]);