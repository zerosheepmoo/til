(self.webpackChunktil=self.webpackChunktil||[]).push([[335],{326:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>g});var l=r(6252);const a=(0,l.Wm)("h1",{id:"property-descriptor"},[(0,l.Wm)("a",{class:"header-anchor",href:"#property-descriptor"},"#"),(0,l.Uk)(" Property Descriptor")],-1),o={href:"https://tc39.es/ecma262/#sec-property-attributes",target:"_blank",rel:"noopener noreferrer"},n=(0,l.Uk)("프로퍼티 어트리뷰트 ecma262"),i=(0,l.Uk)("specification type: Property Descriptor"),s=(0,l.uE)('<h2 id="의미"><a class="header-anchor" href="#의미">#</a> 의미</h2><ul><li>Object 는 논리적으로 보았을 때 properties 의 Collection이다.</li><li>프로퍼티는 데이터 프로퍼티거나, 엑세서 프로퍼티다. <ul><li>데이터 프로퍼티: ECMAScript language value 의 key value 와 Boolean 어트리뷰트의 set.</li><li>엑세서 프로퍼티: 1~2 개의 엑세서 함수로 된 key value 와 Boolean 어트리뷰트의 set.</li><li><blockquote><p>A data property associates a key value with an ECMAScript language value and a set of Boolean attributes. An accessor property associates a key value with one or two accessor functions, and a set of Boolean attributes.</p></blockquote></li></ul></li></ul><h2 id="data-property-attributes"><a class="header-anchor" href="#data-property-attributes">#</a> Data Property Attributes</h2><table><thead><tr><th style="text-align:center;">Attribute Name</th><th style="text-align:center;">Value Domain</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:center;"><p>[[Value]]</p></td><td style="text-align:center;"><p>Any ECMAScript language type</p></td><td><p>The value retrieved by a get access of the property.</p></td></tr><tr><td style="text-align:center;">[[Writable]]</td><td style="text-align:center;"><code>Boolean</code></td><td><code>false</code>면, property의 [[Value]] 어트리뷰트를 [[Set]]으로 못바꿈</td></tr><tr><td style="text-align:center;"><p>[[Enumerable]]</p></td><td style="text-align:center;"><p><code>Boolean</code></p></td><td><ul><li><code>true</code>면, for-in enumeration 가능 (see 14.7.5)</li><li>아닐 경우, 프로퍼티는 non-enumerable 하다고 함.</li></ul></td></tr><tr><td style="text-align:center;"><p>[[Configurable]]</p></td><td style="text-align:center;"><p><code>Boolean</code></p></td><td><p><code>false</code>면, 프로퍼티를 삭제하거나, accessor 프로퍼티로 변경하려 할때, 또는 그것의 attributes (other than [[Value]], or changing [[Writable]] to false) 를 변경하려 할 때 실패한다.</p></td></tr></tbody></table><h2 id="accessor-property-attributes"><a class="header-anchor" href="#accessor-property-attributes">#</a> Accessor Property Attributes</h2><table><thead><tr><th style="text-align:center;">Attribute Name</th><th style="text-align:center;">Value Domain</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:center;"><p>[[Get]]</p></td><td style="text-align:center;"><p><code>Object|Undefined</code></p></td><td><p>function object 여야 한다. 해당 함수의 [[Call]] internal method는 빈 아규먼트 리스트와 함께 호출되며, 프로퍼티 값을 retrieve하기 위해 프로퍼티 get 접근 때마다 수행된다.</p></td></tr><tr><td style="text-align:center;"><p>[[Set]]</p></td><td style="text-align:center;"><p><code>Object|Undefined</code></p></td><td><p>function object 여야 한다. 해당 함수의 [[Call]] internal method는 assigned value 가 될 단독의 아규먼트와 함께 호출되며, 프로퍼티 set 접근 때마다 수행된다. 프로퍼티의 [[Set]] internal method 는 (반드시 그럴필요는 없지만) 프로퍼티의 [[Get]] internal method 로의 subsequent calls 에 의한 반환값에 영향을 미치게 할 수 있다.|</p></td></tr><tr><td style="text-align:center;"><p>[[Enumerable]]</p></td><td style="text-align:center;"><p><code>Boolean</code></p></td><td><ul><li><code>true</code>면, for-in enumeration 가능 (see 14.7.5)</li><li>아닐 경우, 프로퍼티는 non-enumerable 하다고 함.</li></ul></td></tr><tr><td style="text-align:center;"><p>[[Configurable]]</p></td><td style="text-align:center;"><p><code>Boolean</code></p></td><td><p><code>false</code>면 프로퍼티를 삭제하거나, data 프로퍼티로 변경하려 할때, 또는 그것의 attributes 를 변경하려 할 때 실패한다.</p></td></tr></tbody></table><h2 id="etc"><a class="header-anchor" href="#etc">#</a> etc</h2>',7),c={href:"https://es.discourse.group/t/i-am-confused-with-6-2-5-4-frompropertydescriptor/739",target:"_blank",rel:"noopener noreferrer"},d=(0,l.Uk)("FromPropertyDescriptor abstract operation"),p=(0,l.Wm)("li",null,"어처구니 없는 실수. descriptor의 js object representation 을 return 한다는 사실을 인지못했다.",-1),u=(0,l.Wm)("li",null,[(0,l.Wm)("code",null,"Object.getOwnPropertyDescriptor"),(0,l.Uk)(" 등에서 사용된다는 점을 명시하자.")],-1),h={href:"https://github.com/ljharb/es-abstract/blob/144955764b80341bee97c1773f89142b7e507840/2020/FromPropertyDescriptor.js#L9-L36",target:"_blank",rel:"noopener noreferrer"},b=(0,l.Uk)("관련소스코드: es-abstract"),y=(0,l.Wm)("h2",{id:"summary"},[(0,l.Wm)("a",{class:"header-anchor",href:"#summary"},"#"),(0,l.Uk)(" summary")],-1),m=(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,"Data Property attributes는 [[value]], [[Writable]], [[Enumarable]], [[Configurable]]이다."),(0,l.Wm)("li",null,"Accessor Property attributes는 [[Get]], [[Set]], [[Enumarable]], [[Configurable]]이다.")],-1),g={render:function(e,t){const r=(0,l.up)("OutboundLink"),g=(0,l.up)("RouterLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[a,(0,l.Wm)("blockquote",null,[(0,l.Wm)("p",null,[(0,l.Wm)("a",o,[n,(0,l.Wm)(r)])]),(0,l.Wm)("p",null,[(0,l.Wm)(g,{to:"/ecmascript/6-2.html#_6-2-5-the-property-descriptor-%E1%84%89%E1%85%B3%E1%84%91%E1%85%A6%E1%86%A8-%E1%84%90%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%B8"},{default:(0,l.w5)((()=>[i])),_:1})])]),s,(0,l.Wm)("ul",null,[(0,l.Wm)("li",null,[(0,l.Wm)("a",c,[d,(0,l.Wm)(r)]),(0,l.Wm)("ul",null,[p,u,(0,l.Wm)("li",null,[(0,l.Wm)("a",h,[b,(0,l.Wm)(r)])])])])]),y,m],64)}}},2634:(e,t,r)=>{"use strict";r.r(t),r.d(t,{data:()=>l});const l={key:"v-70e0a908",path:"/2021/04/15/propertydescriptor.html",title:"Property Descriptor",lang:"ko-KR",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",sidebar:"auto"},excerpt:"",headers:[{level:2,title:"의미",slug:"의미",children:[]},{level:2,title:"Data Property Attributes",slug:"data-property-attributes",children:[]},{level:2,title:"Accessor Property Attributes",slug:"accessor-property-attributes",children:[]},{level:2,title:"etc",slug:"etc",children:[]},{level:2,title:"summary",slug:"summary",children:[]}],filePathRelative:"_posts/202104/2021-04-15-propertydescriptor.md",git:{updatedTime:1618476392e3}}}}]);