(self.webpackChunktil=self.webpackChunktil||[]).push([[2421],{9501:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>z});var t=a(6252);const e=(0,t.Wm)("h1",{id:"javascript-cli-with-node-js"},[(0,t.Wm)("a",{class:"header-anchor",href:"#javascript-cli-with-node-js"},"#"),(0,t.Uk)(" javascript CLI with node js")],-1),p={href:"https://www.sitepoint.com/javascript-command-line-interface-cli-node-js/",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("원본 게시글"),c={href:"https://github.com/sitepoint-editors/ginit",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("해당 튜토리얼의 repository"),i=(0,t.uE)('<h2 id="package-overview"><a class="header-anchor" href="#package-overview">#</a> Package Overview</h2><ul><li><code>chalk</code>: 출력 색칠</li><li><code>clear</code>: 터미널 화면 클리어</li><li><code>clui</code>: draws command-line tables, gauges and spinners</li><li><code>figlet</code>: creates ASCII art from text</li><li><code>inquirer</code>: creates interactive command-line user interface</li><li><code>minimist</code>: parses argument options</li><li><s><code>configstore</code>: 쉽게 콘피그를 세이브 / 로드 without you having to think about where and how.</s></li><li><code>conf</code> 사용</li></ul><h3 id="추가적"><a class="header-anchor" href="#추가적">#</a> 추가적</h3><ul><li><code>@octokit/rest</code>: a GitHub REST API client for Node.js</li><li><s><code>@octokit/auth-basic</code></s>: <code>deprecated</code></li><li><code>@octokit/auth-token</code>: &quot;^2.4.5&quot;,</li><li><s><code>lodash</code>: a JavaScript utility library</s> <code>alternative vanilla code</code></li><li><code>simple-git</code>: a tool for running Git commands in a Node.js application</li><li><code>touch</code>: a tool for implementing the Unix touch command.</li></ul><h2 id="helper-method-만들기"><a class="header-anchor" href="#helper-method-만들기">#</a> Helper Method 만들기</h2><h3 id="file-js"><a class="header-anchor" href="#file-js">#</a> <code>file.js</code></h3><ul><li>현재 디렉토리 명을 get (for default repo name)</li><li>지정 디렉토리가 존재하는지 check <ul><li>.git 디렉토리가 있는지 확인하여, repo 가 이미 등록되어 있는지 확인하기</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">realpathSync</span><span class="token punctuation">(</span>__filename<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>위에 녀석을 쓰고 싶겠지만, 같은 디렉토리에서 어플리케이션을 실행(<code>node index.js</code>)할 때 작동한다.</li><li>하지만 콘솔 애플리케이션을 global 범위에서 사용할 수 있도록 할거기에...</li><li>응용 프로그램이있는 디렉토리가 아니라 작업중인 디렉토리명을 가져와야한다.</li><li>이를 위해 <code>process.cwd</code>를 사용하는 것이 좋다.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>현재 디렉토리가 존재하는지 아닌지 확인하는 바람직한 방법은 계속 바뀌고 있다.</li><li>지금은 <code>existsSync</code> 사용할 거다.</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">getCurrentDirectoryBase</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span><span class="token function">cwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n\n  <span class="token function-variable function">directoryExists</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>정리하면...</p><ul><li><code>process.cwd</code>를 사용하여 현재 콘솔의 디렉토리명을 가져오기</li><li><code>existsSync</code>를 사용하여 디렉토리 존재여부 판단</li><li>마지막으로 동기적인 메소드를 쓰는 것이 권장</li></ul><p>위 처럼 유틸리티 페이지를 만들고, <code>index.js</code> 에 모듈을 가져온다.</p><h2 id="cli-초기화"><a class="header-anchor" href="#cli-초기화">#</a> CLI 초기화</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// index.js</span>\n\n<span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>\n  chalk<span class="token punctuation">.</span><span class="token function">yellow</span><span class="token punctuation">(</span>\n    figlet<span class="token punctuation">.</span><span class="token function">textSync</span><span class="token punctuation">(</span><span class="token string">&#39;Ginit&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> horizontalLayout<span class="token operator">:</span> <span class="token string">&#39;full&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="prompting-the-user-for-input"><a class="header-anchor" href="#prompting-the-user-for-input">#</a> Prompting the User for Input</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> inquirer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;inquirer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">askGithubCredentials</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> questions <span class="token operator">=</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;username&#39;</span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;input&#39;</span><span class="token punctuation">,</span>\n        message<span class="token operator">:</span> <span class="token string">&#39;Enter your GitHub username or e-mail address:&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span> <span class="token parameter">value</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">&#39;Please enter your username or e-mail address.&#39;</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">{</span>\n        name<span class="token operator">:</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span>\n        type<span class="token operator">:</span> <span class="token string">&#39;password&#39;</span><span class="token punctuation">,</span>\n        message<span class="token operator">:</span> <span class="token string">&#39;Enter your password:&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token keyword">if</span> <span class="token punctuation">(</span>value<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n            <span class="token keyword">return</span> <span class="token string">&#39;Please enter your password.&#39;</span><span class="token punctuation">;</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>questions<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h2 id="dealing-with-github-authentication"><a class="header-anchor" href="#dealing-with-github-authentication">#</a> Dealing With GitHub Authentication</h2><h3 id="storing-config"><a class="header-anchor" href="#storing-config">#</a> Storing Config</h3><div class="custom-container danger"><p class="custom-container-title">Note</p><p>코드 예시들은 deprecated 된 속성들을 다루고 있다! 작동하지 않음을 잊지말자</p></div>',22),u=(0,t.Wm)("li",null,[(0,t.Wm)("s",null,"username, pw 와 token 교환하기"),(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"deprected 되었으므로 personal access token 만 사용하기")])],-1),r=(0,t.Wm)("li",null,[(0,t.Wm)("s",null,[(0,t.Wm)("code",null,"configstore"),(0,t.Uk)(" 패키지를 이용해서 oauth token 을 따로 저장하기")])],-1),k=(0,t.Wm)("li",null,[(0,t.Wm)("s",null,"configstore 파일을 만들어서 로컬에 정보를 저장함")],-1),d={href:"https://github.com/sindresorhus/conf",target:"_blank",rel:"noopener noreferrer"},m=(0,t.Uk)("conf"),b=(0,t.Uk)("로 대체 "),h=(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,"cnofigstore 가 require 문법을 제공하지 않는 형태임")],-1),g=(0,t.uE)('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>on macOS, you’ll find the file in /Users/[YOUR-USERNME]/.config/configstore/ginit.json. On Linux, it’s in /home/[YOUR-USERNME]/.config/configstore/ginit.json.</p></div><h2 id="communicating-with-the-github-api"><a class="header-anchor" href="#communicating-with-the-github-api">#</a> Communicating with the GitHub API</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">CLI</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;clui&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Configstore <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;configstore&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Octokit <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@octokit/rest&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> Spinner <span class="token operator">=</span> <span class="token constant">CLI</span><span class="token punctuation">.</span>Spinner<span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> createBasicAuth <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@octokit/auth-basic&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> inquirer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./inquirer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> pkg <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../package.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> conf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Configstore</span><span class="token punctuation">(</span>pkg<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> octokit<span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function-variable function">getInstance</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> octokit<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">getStoredGithubToken</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token keyword">await</span> conf<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;github.token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">askResetPAT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> res<span class="token punctuation">.</span>isReset <span class="token operator">===</span> <span class="token string">&#39;No&#39;</span><span class="token operator">?</span> t<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',4),f={class:"custom-container details"},v=(0,t.Wm)("summary",null,"다른 도구 사용",-1),w=(0,t.Wm)("h2",{id:"official-authentication-strategies"},[(0,t.Wm)("a",{class:"header-anchor",href:"#official-authentication-strategies"},"#"),(0,t.Uk)(" Official Authentication Strategies")],-1),y=(0,t.Wm)("h3",{id:"personal-access-token-authentication"},[(0,t.Wm)("a",{class:"header-anchor",href:"#personal-access-token-authentication"},"#"),(0,t.Uk)(" Personal Access Token authentication")],-1),W={href:"https://github.com/octokit/authentication-strategies.js",target:"_blank",rel:"noopener noreferrer"},j=(0,t.Uk)("authentication-strategies.js"),q=(0,t.Wm)("p",null,[(0,t.Uk)("Module: "),(0,t.Wm)("code",null,"@octokit/auth-token")],-1),U=(0,t.Uk)("The simplest authentication strategy requires a user to create a personal access token at "),x={href:"https://github.com/settings/tokens/new",target:"_blank",rel:"noopener noreferrer"},S=(0,t.Uk)("https://github.com/settings/tokens/new"),C=(0,t.Uk)(" and pass it as the single argument to the "),P=(0,t.Wm)("code",null,"createTokenAuth()",-1),A=(0,t.Uk)(" function. You can pass in any other token such as an installation access token or a OAuth user access token, but there are dedicated startegies for the respective use cases which might be a better fit."),I=(0,t.uE)('<p><code>@octokit/auth-token</code> is the default authentication strategy built into <code>@octokit/core</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> auth <span class="token operator">=</span> <span class="token function">createTokenAuth</span><span class="token punctuation">(</span><span class="token string">&quot;1234567890abcdef1234567890abcdef12345678&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> token <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',2),_=(0,t.Wm)("h2",{id:"결론"},[(0,t.Wm)("a",{class:"header-anchor",href:"#결론"},"#"),(0,t.Uk)(" 결론")],-1),E=(0,t.Wm)("li",null,"조금 변화를 줌",-1),O=(0,t.Wm)("li",null,"2FA 는 아직 포함안함",-1),G={href:"https://github.com/zerosheepmoo/firstdo",target:"_blank",rel:"noopener noreferrer"},T=(0,t.Uk)("github repository 참고"),H=(0,t.Wm)("h2",{id:"참고"},[(0,t.Wm)("a",{class:"header-anchor",href:"#참고"},"#"),(0,t.Uk)(" 참고")],-1),L={href:"https://developer.github.com/changes/2020-02-14-deprecating-password-auth/#changes-to-make",target:"_blank",rel:"noopener noreferrer"},R=(0,t.Uk)("auth basic deprecated"),N={href:"https://www.npmjs.com/package/simple-git",target:"_blank",rel:"noopener noreferrer"},M=(0,t.Uk)("simple git package"),Y={href:"https://octokit.github.io/rest.js/v18#authentication",target:"_blank",rel:"noopener noreferrer"},D=(0,t.Uk)("@octokit/rest api - authentication"),z={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[e,(0,t.Wm)("blockquote",null,[(0,t.Wm)("p",null,[(0,t.Wm)("a",p,[o,(0,t.Wm)(a)])]),(0,t.Wm)("p",null,[(0,t.Wm)("a",c,[l,(0,t.Wm)(a)])])]),i,(0,t.Wm)("ul",null,[u,r,k,(0,t.Wm)("li",null,[(0,t.Wm)("a",d,[m,(0,t.Wm)(a)]),b,h])]),g,(0,t.Wm)("details",f,[v,w,y,(0,t.Wm)("blockquote",null,[(0,t.Wm)("p",null,[(0,t.Wm)("a",W,[j,(0,t.Wm)(a)])])]),q,(0,t.Wm)("p",null,[U,(0,t.Wm)("a",x,[S,(0,t.Wm)(a)]),C,P,A]),I]),_,(0,t.Wm)("ul",null,[E,O,(0,t.Wm)("li",null,[(0,t.Wm)("a",G,[T,(0,t.Wm)(a)])])]),H,(0,t.Wm)("ul",null,[(0,t.Wm)("li",null,[(0,t.Wm)("a",L,[R,(0,t.Wm)(a)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",N,[M,(0,t.Wm)(a)])]),(0,t.Wm)("li",null,[(0,t.Wm)("a",Y,[D,(0,t.Wm)(a)])])])],64)}}},8717:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-5271193d",path:"/2021/04/28/javascriptcli.html",title:"javascript CLI with node js",lang:"ko-KR",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",sidebar:"auto"},excerpt:"",headers:[{level:2,title:"Package Overview",slug:"package-overview",children:[{level:3,title:"추가적",slug:"추가적",children:[]}]},{level:2,title:"Helper Method 만들기",slug:"helper-method-만들기",children:[{level:3,title:"file.js",slug:"file-js",children:[]}]},{level:2,title:"CLI 초기화",slug:"cli-초기화",children:[]},{level:2,title:"Prompting the User for Input",slug:"prompting-the-user-for-input",children:[]},{level:2,title:"Dealing With GitHub Authentication",slug:"dealing-with-github-authentication",children:[{level:3,title:"Storing Config",slug:"storing-config",children:[]}]},{level:2,title:"Communicating with the GitHub API",slug:"communicating-with-the-github-api",children:[]},{level:2,title:"Official Authentication Strategies",slug:"official-authentication-strategies",children:[{level:3,title:"Personal Access Token authentication",slug:"personal-access-token-authentication",children:[]}]},{level:2,title:"결론",slug:"결론",children:[]},{level:2,title:"참고",slug:"참고",children:[]}],filePathRelative:"_posts/202104/2021-04-28-javascriptcli.md",git:{updatedTime:1619617201e3}}}}]);