(self.webpackChunktil=self.webpackChunktil||[]).push([[4338],{8556:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>m});var t=a(6252);const p=(0,t.Wm)("h1",{id:"web-speech-api"},[(0,t.Wm)("a",{class:"header-anchor",href:"#web-speech-api"},"#"),(0,t.Uk)(" Web Speech API")],-1),e={href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API#browser_compatibility",target:"_blank",rel:"noopener noreferrer"},o=(0,t.Uk)("mdn web speech api"),c={href:"https://developer.mozilla.org/en-US/docs/Web/API/Web_Speech_API/Using_the_Web_Speech_API",target:"_blank",rel:"noopener noreferrer"},l=(0,t.Uk)("using speech api"),u=(0,t.Wm)("h2",{id:"web-speech-recognition"},[(0,t.Wm)("a",{class:"header-anchor",href:"#web-speech-recognition"},"#"),(0,t.Uk)(" Web Speech Recognition")],-1),i=(0,t.Wm)("li",null,"음성인식",-1),r={href:"https://www.w3.org/TR/jsgf/",target:"_blank",rel:"noopener noreferrer"},k=(0,t.Uk)("jsspeech grammar format"),b=(0,t.uE)('<h3 id="크롬-지원"><a class="header-anchor" href="#크롬-지원">#</a> 크롬 지원</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> SpeechRecognition <span class="token operator">=</span> SpeechRecognition <span class="token operator">||</span> webkitSpeechRecognition\n<span class="token keyword">var</span> SpeechGrammarList <span class="token operator">=</span> SpeechGrammarList <span class="token operator">||</span> webkitSpeechGrammarList\n<span class="token keyword">var</span> SpeechRecognitionEvent <span class="token operator">=</span> SpeechRecognitionEvent <span class="token operator">||</span> webkitSpeechRecognitionEvent\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="grammar"><a class="header-anchor" href="#grammar">#</a> Grammar</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token string">&#39;aqua&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;azure&#39;</span> <span class="token punctuation">,</span> <span class="token string">&#39;beige&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bisque&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;brown&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chocolate&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coral&#39;</span> <span class="token operator">...</span> <span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> grammar <span class="token operator">=</span> <span class="token string">&#39;#JSGF V1.0; grammar colors; public &lt;color&gt; = &#39;</span> <span class="token operator">+</span> colors<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39; | &#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39; ;&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="문법을-음성인식에-플러그인"><a class="header-anchor" href="#문법을-음성인식에-플러그인">#</a> 문법을 음성인식에 플러그인</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> recognition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechRecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> speechRecognitionList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechGrammarList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nspeechRecognitionList<span class="token punctuation">.</span><span class="token function">addFromString</span><span class="token punctuation">(</span>grammar<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>property assign</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>recognition<span class="token punctuation">.</span>grammars <span class="token operator">=</span> speechRecognitionList<span class="token punctuation">;</span>\nrecognition<span class="token punctuation">.</span>continuous <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\nrecognition<span class="token punctuation">.</span>lang <span class="token operator">=</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">;</span>\nrecognition<span class="token punctuation">.</span>interimResults <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>\nrecognition<span class="token punctuation">.</span>maxAlternatives <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>start</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> diagnostic <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.output&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> bg <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;html&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> hints <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.hints&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> colorHTML<span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span>\ncolors<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">v<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  colorHTML <span class="token operator">+=</span> <span class="token string">&#39;&lt;span style=&quot;background-color:&#39;</span> <span class="token operator">+</span> v <span class="token operator">+</span> <span class="token string">&#39;;&quot;&gt; &#39;</span> <span class="token operator">+</span> v <span class="token operator">+</span> <span class="token string">&#39; &lt;/span&gt;&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nhints<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;tab/click background 그리고 &#39;</span> <span class="token operator">+</span> colorHTML <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">;</span>\n\ndocument<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  recognition<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Ready to receive a color command.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ul><li>핸들링</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>recognition<span class="token punctuation">.</span><span class="token function-variable function">onresult</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">var</span> color <span class="token operator">=</span> event<span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>transcript<span class="token punctuation">;</span>\n  diagnostic<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;Result received: &#39;</span> <span class="token operator">+</span> color <span class="token operator">+</span> <span class="token string">&#39;.&#39;</span><span class="token punctuation">;</span>\n  bg<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> color<span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Confidence: &#39;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>confidence<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>recognition<span class="token punctuation">.</span><span class="token function-variable function">onnomatch</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  diagnostic<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;I didnt recognize that color.&#39;</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>recognition<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  diagnostic<span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">&#39;Error occurred in recognition: &#39;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span>error<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="web-speech"><a class="header-anchor" href="#web-speech">#</a> Web speech</h2><h3 id="html"><a class="header-anchor" href="#html">#</a> HTML</h3><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Speech synthesiser<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Enter some text in the input below and press return to hear it. change voices using the dropdown menu.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>txt<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Rate<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rate<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rate-value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clearfix<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pitch<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Pitch<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>range<span class="token punctuation">&quot;</span></span> <span class="token attr-name">min</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">max</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">step</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pitch<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>pitch-value<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>clearfix<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span><span class="token punctuation">&gt;</span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="변수설정"><a class="header-anchor" href="#변수설정">#</a> 변수설정</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> synth <span class="token operator">=</span> window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> inputForm <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> inputTxt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> voiceSelect <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;select&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> pitch <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#pitch&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> pitchValue <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.pitch-value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> rate <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#rate&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">var</span> rateValue <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;.rate-value&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">var</span> voices <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="음성-populate"><a class="header-anchor" href="#음성-populate">#</a> 음성 populate</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">populateVoiceList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  voices <span class="token operator">=</span> synth<span class="token punctuation">.</span><span class="token function">getVoices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> voices<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">var</span> option <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;option&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    option<span class="token punctuation">.</span>textContent <span class="token operator">=</span> voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39; (&#39;</span> <span class="token operator">+</span> voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lang <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">if</span><span class="token punctuation">(</span>voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>default<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      option<span class="token punctuation">.</span>textContent <span class="token operator">+=</span> <span class="token string">&#39; -- DEFAULT&#39;</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    option<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-lang&#39;</span><span class="token punctuation">,</span> voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lang<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    option<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-name&#39;</span><span class="token punctuation">,</span> voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    voiceSelect<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">populateVoiceList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>speechSynthesis<span class="token punctuation">.</span>onvoiceschanged <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  speechSynthesis<span class="token punctuation">.</span>onvoiceschanged <span class="token operator">=</span> populateVoiceList<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="input"><a class="header-anchor" href="#input">#</a> input</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>inputForm<span class="token punctuation">.</span><span class="token function-variable function">onsubmit</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">var</span> utterThis <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechSynthesisUtterance</span><span class="token punctuation">(</span>inputTxt<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">var</span> selectedOption <span class="token operator">=</span> voiceSelect<span class="token punctuation">.</span>selectedOptions<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;data-name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span><span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> voices<span class="token punctuation">.</span>length <span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name <span class="token operator">===</span> selectedOption<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            utterThis<span class="token punctuation">.</span>voice <span class="token operator">=</span> voices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    utterThis<span class="token punctuation">.</span>pitch <span class="token operator">=</span> pitch<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n    utterThis<span class="token punctuation">.</span>rate <span class="token operator">=</span> rate<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n    synth<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span>utterThis<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    utterThis<span class="token punctuation">.</span><span class="token function-variable function">onpause</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">var</span> char <span class="token operator">=</span> event<span class="token punctuation">.</span>utterance<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>charIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Speech paused at character &#39;</span> <span class="token operator">+</span> event<span class="token punctuation">.</span>charIndex <span class="token operator">+</span> <span class="token string">&#39; of &quot;&#39;</span> <span class="token operator">+</span>\n        event<span class="token punctuation">.</span>utterance<span class="token punctuation">.</span>text <span class="token operator">+</span> <span class="token string">&#39;&quot;, which is &quot;&#39;</span> <span class="token operator">+</span> char <span class="token operator">+</span> <span class="token string">&#39;&quot;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    inputTxt<span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>pitch<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  pitchValue<span class="token punctuation">.</span>textContent <span class="token operator">=</span> pitch<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nrate<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  rateValue<span class="token punctuation">.</span>textContent <span class="token operator">=</span> rate<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>',25),m={render:function(n,s){const a=(0,t.up)("OutboundLink");return(0,t.wg)(),(0,t.j4)(t.HY,null,[p,(0,t.Wm)("blockquote",null,[(0,t.Wm)("p",null,[(0,t.Wm)("a",e,[o,(0,t.Wm)(a)]),(0,t.Wm)("a",c,[l,(0,t.Wm)(a)])])]),u,(0,t.Wm)("ul",null,[i,(0,t.Wm)("li",null,[(0,t.Wm)("a",r,[k,(0,t.Wm)(a)])])]),b],64)}}},9994:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>t});const t={key:"v-03230a77",path:"/2021/06/01/webspeechapi.html",title:"Web Speech API",lang:"ko-KR",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",sidebar:"auto"},excerpt:"",headers:[{level:2,title:"Web Speech Recognition",slug:"web-speech-recognition",children:[{level:3,title:"크롬 지원",slug:"크롬-지원",children:[]},{level:3,title:"Grammar",slug:"grammar",children:[]},{level:3,title:"문법을 음성인식에 플러그인",slug:"문법을-음성인식에-플러그인",children:[]}]},{level:2,title:"Web speech",slug:"web-speech",children:[{level:3,title:"HTML",slug:"html",children:[]},{level:3,title:"변수설정",slug:"변수설정",children:[]},{level:3,title:"음성 populate",slug:"음성-populate",children:[]},{level:3,title:"input",slug:"input",children:[]}]}],filePathRelative:"_posts/202106/2021-06-01-webspeechapi.md",git:{updatedTime:1622547097e3}}}}]);