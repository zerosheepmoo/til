(self.webpackChunktil=self.webpackChunktil||[]).push([[1818],{4112:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>Jn});var e=a(6252);const l=(0,e.uE)('<h1 id="시작하기"><a class="header-anchor" href="#시작하기">#</a> 시작하기</h1><h2 id="installation"><a class="header-anchor" href="#installation">#</a> Installation</h2><h3 id="다운로드와-설치"><a class="header-anchor" href="#다운로드와-설치">#</a> 다운로드와 설치</h3>',3),t={href:"https://github.com/denoland/deno_install",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Uk)("deno_install"),o=(0,e.Uk)("에서 제공"),c=(0,e.uE)('<details class="custom-container details"><summary>목록</summary><h4 id="using-shell-macos-and-linux"><a class="header-anchor" href="#using-shell-macos-and-linux">#</a> Using Shell (macOS and Linux)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">curl</span> -fsSL <span class="token operator">&lt;</span>https://deno.land/x/install/install.sh<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token function">sh</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-powershell-windows"><a class="header-anchor" href="#using-powershell-windows">#</a> Using PowerShell (Windows)</h4><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token function">iwr</span> &lt;https:<span class="token operator">/</span><span class="token operator">/</span>deno<span class="token punctuation">.</span>land<span class="token operator">/</span>x<span class="token operator">/</span>install<span class="token operator">/</span>install<span class="token punctuation">.</span>ps1&gt; <span class="token operator">-</span>useb <span class="token punctuation">|</span> <span class="token function">iex</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-scoop-windows"><a class="header-anchor" href="#using-scoop-windows">#</a> Using Scoop (Windows)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>scoop <span class="token function">install</span> deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-chocolatey-windows"><a class="header-anchor" href="#using-chocolatey-windows">#</a> Using Chocolatey (Windows)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>choco <span class="token function">install</span> deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-homebrew-macos"><a class="header-anchor" href="#using-homebrew-macos">#</a> Using Homebrew (macOS)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>brew <span class="token function">install</span> deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="using-nix-macos-and-linux"><a class="header-anchor" href="#using-nix-macos-and-linux">#</a> Using Nix (macOS and Linux)</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>nix-shell -p deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="build-and-install-from-source-using-cargo"><a class="header-anchor" href="#build-and-install-from-source-using-cargo">#</a> Build and install from source using Cargo</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>cargo <span class="token function">install</span> deno --locked\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></details>',1),r={href:"https://github.com/denoland/deno/releases",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("메뉴얼 하게 설치"),u=(0,e.Uk)(". "),m=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"These packages contain just a single executable file."),(0,e.Wm)("li",null,"You will have to set the executable bit on macOS and Linux.")],-1),d=(0,e.Uk)("공식 Docker 이미지는 아직("),k={href:"https://github.com/denoland/deno/issues/3356",target:"_blank",rel:"noopener noreferrer"},b=(0,e.Uk)("#issue#3356"),h=(0,e.Uk)(") "),g={href:"https://github.com/hayd/deno-docker",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("커뮤니티 이미지"),v=(0,e.Uk)("는 있음"),q=(0,e.uE)('<h3 id="설치-테스트"><a class="header-anchor" href="#설치-테스트">#</a> 설치 테스트</h3><ul><li><a href="#command-line-interface">deno cli</a> 참고</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno --version\n<span class="token comment"># flags / usages</span>\ndeno <span class="token builtin class-name">help</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="업데이트"><a class="header-anchor" href="#업데이트">#</a> 업데이트</h3><p><code>github.com/denoland/deno/releases</code>로 부터 최신 릴리즈를 가져옴</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno upgrade\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>특정 버전 설치도 가능</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno upgrade --version <span class="token number">1.0</span>.1\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="빌드"><a class="header-anchor" href="#빌드">#</a> 빌드</h3>',9),W=(0,e.Wm)("code",null,"Contributing",-1),y=(0,e.Uk)(" 챕터"),x=(0,e.Uk)(" 참고"),w=(0,e.Wm)("h2",{id:"환경설정"},[(0,e.Wm)("a",{class:"header-anchor",href:"#환경설정"},"#"),(0,e.Uk)(" 환경설정")],-1),_=(0,e.Wm)("h3",{id:"environmental-variables"},[(0,e.Wm)("a",{class:"header-anchor",href:"#environmental-variables"},"#"),(0,e.Uk)(" Environmental variables")],-1),U=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"DENO_DIR"),(0,e.Uk)(" defaults to "),(0,e.Wm)("code",null,"$HOME/.cache/deno"),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"메뉴얼하게 지정도 가능")])],-1),S=(0,e.Wm)("code",null,"NO_COLOR",-1),E=(0,e.Uk)(": output 색상 끄기 "),L={href:"https://no-color.org/",target:"_blank",rel:"noopener noreferrer"},P=(0,e.Uk)("https://no-color.org/"),j=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"--allow-env"),(0,e.Uk)(" 없이 "),(0,e.Wm)("code",null,"NO_COLOR"),(0,e.Uk)("를 테스트 가능: "),(0,e.Wm)("code",null,"Deno.noColor")],-1),C=(0,e.uE)('<h3 id="shell-autocomplete"><a class="header-anchor" href="#shell-autocomplete">#</a> Shell autocomplete</h3><ul><li><code>deno completions &lt;shell&gt;</code> command를 사용하여 completion script를 생성가능. <ul><li><code>stdout</code>으로 나오니까 적절한 파일에 redirection 해야함.</li></ul></li></ul><h4 id="지원되는-쉘"><a class="header-anchor" href="#지원되는-쉘">#</a> 지원되는 쉘</h4><ul><li>zsh</li><li>bash</li><li>fish</li><li>powershell</li><li>elvish</li></ul><details class="custom-container details"><summary>예시</summary><p><strong>bash 예시</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno completions <span class="token function">bash</span> <span class="token operator">&gt;</span> /usr/local/etc/bash_completion.d/deno.bash\n<span class="token builtin class-name">source</span> /usr/local/etc/bash_completion.d/deno.bash\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>zsh 예시</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/.zsh <span class="token comment"># create a folder to save your completions. it can be anywhere</span>\ndeno completions <span class="token function">zsh</span> <span class="token operator">&gt;</span> ~/.zsh/_deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>그리고 <code>.zshrc</code>에 넣기</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token assign-left variable">fpath</span><span class="token operator">=</span><span class="token punctuation">(</span>~/.zsh <span class="token variable">$fpath</span><span class="token punctuation">)</span>\nautoload -Uz compinit\ncompinit -u\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>이후 터미널 재시작 <ul><li>안될 경우 <code>rm ~/.zcompdump/</code> 로 이전 컴플리션 지우고 <code>compinit</code>으로 재생성</li></ul></li></ul><p><strong>(zsh + oh-my-zsh) 예시 <code>[recommended for zsh users]</code></strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">mkdir</span> ~/.oh-my-zsh/custom/plugins/deno\ndeno completions <span class="token function">zsh</span> <span class="token operator">&gt;</span> ~/.oh-my-zsh/custom/plugins/deno/_deno\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>After this add deno plugin under plugins tag in <code>~/.zshrc</code> file.</li><li>for tools like <code>antigen</code> path will be <code>~/.antigen/bundles/robbyrussell/oh-my-zsh/plugins</code> and command will be <code>antigen bundle</code> deno and so on.</li></ul><p><strong>powershell 예시</strong></p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>deno completions powershell &gt;&gt; <span class="token variable">$profile</span>\n<span class="token punctuation">.</span><span class="token variable">$profile</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>default: <code>$HOME\\Documents\\WindowsPowerShell\\MicrosoftPowerShell_profile.ps1</code><ul><li>it will be run whenever you launch the PowerShell.</li></ul></li></ul></details><h3 id="editors-and-ides"><a class="header-anchor" href="#editors-and-ides">#</a> Editors and IDEs</h3><ul><li>현재시점에선 에디터에서 사용이 불완전해서 커뮤니티에서 각자만의 방법을 고안했음</li></ul><h4 id="vs-code"><a class="header-anchor" href="#vs-code">#</a> VS Code</h4>',8),z={href:"https://github.com/denoland/vscode_deno",target:"_blank",rel:"noopener noreferrer"},T=(0,e.Uk)("vscode_deno"),O={href:"https://marketplace.visualstudio.com/items?itemName=denoland.vscode-deno",target:"_blank",rel:"noopener noreferrer"},I=(0,e.Uk)("visual studio marketplace"),D={class:"custom-container details"},A=(0,e.Wm)("summary",null,"더보기",-1),R=(0,e.Wm)("h4",{id:"jetbrains-ides"},[(0,e.Wm)("a",{class:"header-anchor",href:"#jetbrains-ides"},"#"),(0,e.Uk)(" JetBrains IDEs")],-1),J={href:"https://plugins.jetbrains.com/plugin/14382-deno",target:"_blank",rel:"noopener noreferrer"},N=(0,e.Uk)("Deno plugin"),B=(0,e.Wm)("li",null,[(0,e.Uk)("Once installed, replace the content "),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Uk)("of "),(0,e.Wm)("code",null,"External Libraries > Deno Library > lib > lib.deno.d.ts")]),(0,e.Wm)("li",null,[(0,e.Uk)("with the output of "),(0,e.Wm)("code",null,"deno types"),(0,e.Uk)(".")])])],-1),V=(0,e.Wm)("li",null,"매번 deno 가 업데이트할때마다 설치해야한다.",-1),$=(0,e.Wm)("h4",{id:"vim-and-neovim"},[(0,e.Wm)("a",{class:"header-anchor",href:"#vim-and-neovim"},"#"),(0,e.Uk)(" Vim and NeoVim")],-1),H={href:"https://github.com/neoclide/coc.nvim",target:"_blank",rel:"noopener noreferrer"},M=(0,e.Uk)("CoC"),F=(0,e.Uk)(" (intellisense engine and language server protocol)"),K={href:"https://github.com/dense-analysis/ale",target:"_blank",rel:"noopener noreferrer"},Y=(0,e.Uk)("ALE"),G=(0,e.Uk)(" (syntax checker and language server protocol client)"),Q=(0,e.uE)('<h5 id="coc"><a class="header-anchor" href="#coc">#</a> CoC</h5><ul><li><code>:CocInstall coc-tsserver</code></li><li><code>:CocInstall coc-deno</code></li><li><code>:CocCommand deno.initializeWorkspace</code></li><li><code>gd</code> (go to definition), <code>gr</code> (goto/find references) 가 작동</li></ul><h5 id="ale"><a class="header-anchor" href="#ale">#</a> ALE</h5>',3),X=(0,e.Wm)("li",null,[(0,e.Wm)("p",null,"특별한 추가 configuration 이 없다.")],-1),Z=(0,e.Wm)("p",null,[(0,e.Wm)("code",null,"$PATH"),(0,e.Uk)(" 에 executable 이 위치하 않거나, "),(0,e.Wm)("code",null,"deno"),(0,e.Uk)("라는 이름이 아니거나, unstable features/APIs 사용할 때")],-1),nn=(0,e.Wm)("li",null,"Override ALE's default values.",-1),sn={href:"https://github.com/dense-analysis/ale/blob/master/doc/ale-typescript.txt",target:"_blank",rel:"noopener noreferrer"},an=(0,e.Wm)("code",null,":help ale-typescript",-1),en=(0,e.uE)("<li><p>지원</p><ul><li>autocompletion</li><li>refactoring</li><li>going to definition,</li></ul></li><li><p>key bindings 은 메뉴얼하게 설정</p></li><li><p>설정을 위해 Copy the snippet below into your <code>vimrc/init.vim</code></p></li><li><p><code>deno fmt</code>: 포매팅</p><ul><li>ale_linter setting needs to be set either on a per buffer basis <ul><li><code>(let b:ale_linter = [&#39;deno&#39;])</code></li></ul></li><li>or globally for all TypeScript files <ul><li><code>(let g:ale_fixers={&#39;typescript&#39;: [&#39;deno&#39;]}</code>)</li></ul></li></ul></li>",4),ln=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>&quot; Use <span class="token constant">ALE</span> autocompletion <span class="token keyword">with</span> Vim<span class="token string">&#39;s &#39;</span>omnifunc&#39; <span class="token function">setting</span> <span class="token punctuation">(</span>press <span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">-</span>x<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token constant">C</span><span class="token operator">-</span>o<span class="token operator">&gt;</span> <span class="token keyword">in</span> insert mode<span class="token punctuation">)</span>\nautocmd FileType typescript <span class="token keyword">set</span> omnifunc<span class="token operator">=</span>ale#completion#OmniFunc\n\n&quot; Make sure to use map instead <span class="token keyword">of</span> noremap when using <span class="token generic-function"><span class="token function">a</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span> expression <span class="token keyword">as</span> the <span class="token punctuation">{</span>rhs<span class="token punctuation">}</span>\nnmap <span class="token generic-function"><span class="token function">gr</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_rename<span class="token punctuation">)</span>\nnmap <span class="token generic-function"><span class="token function">gR</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_find_reference<span class="token punctuation">)</span>\nnmap <span class="token generic-function"><span class="token function">gd</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_go_to_definition<span class="token punctuation">)</span>\nnmap <span class="token generic-function"><span class="token function">gD</span> <span class="token generic class-name"><span class="token operator">&lt;</span>Plug<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ale_go_to_type_definition<span class="token punctuation">)</span>\n\n<span class="token keyword">let</span> g<span class="token operator">:</span>ale_fixers <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;typescript&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;deno&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>\n<span class="token keyword">let</span> g<span class="token operator">:</span>ale_fix_on_save <span class="token operator">=</span> <span class="token number">1</span> &quot; run deno fmt when saving a buffer\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="emacs"><a class="header-anchor" href="#emacs">#</a> Emacs</h4>',2),tn={href:"https://github.com/justjavac/typescript-deno-plugin",target:"_blank",rel:"noopener noreferrer"},pn=(0,e.Uk)("typescript-deno-plugin"),on={href:"https://github.com/denoland/vscode_deno",target:"_blank",rel:"noopener noreferrer"},cn=(0,e.Uk)("official VSCode extension"),rn=(0,e.uE)('<p><code>tide</code> is setup for your instance of Emacs</p><ul><li><code>npm install --save-dev typescript-deno-plugin</code></li><li>(<code>npm init -y</code> as necessary)</li><li><code>tsconfig.json</code> and you are off to the races!</li></ul><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;compilerOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;plugins&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescript-deno-plugin&quot;</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// default is `true`</span>\n        <span class="token property">&quot;importmap&quot;</span><span class="token operator">:</span> <span class="token string">&quot;import_map.json&quot;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">]</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="atom"><a class="header-anchor" href="#atom">#</a> Atom</h4>',4),un={href:"https://atom.io/packages/atom-ide-base",target:"_blank",rel:"noopener noreferrer"},mn=(0,e.Uk)("atom-ide-base"),dn={href:"https://atom.io/packages/atom-ide-deno",target:"_blank",rel:"noopener noreferrer"},kn=(0,e.Uk)("atom-ide-deno"),bn=(0,e.Wm)("h4",{id:"lsp-clients"},[(0,e.Wm)("a",{class:"header-anchor",href:"#lsp-clients"},"#"),(0,e.Uk)(" LSP clients")],-1),hn={href:"https://langserver.org/",target:"_blank",rel:"noopener noreferrer"},gn=(0,e.Uk)("Language server protocol"),fn=(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"version 1.6.0 or later."),(0,e.Wm)("li",null,[(0,e.Uk)("If your editor supports the LSP "),(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,"can use Deno as a language server for TypeScript and JavaScript.")])])],-1),vn=(0,e.Wm)("p",null,[(0,e.Uk)("The editor can start the server with "),(0,e.Wm)("code",null,"deno lsp"),(0,e.Uk)(".")],-1),qn=(0,e.Wm)("h5",{id:"example-for-kakoune"},[(0,e.Wm)("a",{class:"header-anchor",href:"#example-for-kakoune"},"#"),(0,e.Uk)(" Example for Kakoune")],-1),Wn={href:"https://github.com/kak-lsp/kak-lsp",target:"_blank",rel:"noopener noreferrer"},yn=(0,e.Wm)("code",null,"kak-lsp",-1),xn=(0,e.Wm)("li",null,[(0,e.Wm)("code",null,"kak-lsp.toml")],-1),wn=(0,e.uE)('<div class="language-toml ext-toml line-numbers-mode"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">language.deno</span><span class="token punctuation">]</span>\n<span class="token key property">filetypes</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">]</span>\n<span class="token key property">roots</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;.git&quot;</span><span class="token punctuation">]</span>\n<span class="token key property">command</span> <span class="token punctuation">=</span> <span class="token string">&quot;deno&quot;</span>\n<span class="token key property">args</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token string">&quot;lsp&quot;</span><span class="token punctuation">]</span>\n\n<span class="token punctuation">[</span><span class="token table class-name">language.deno.initialization_options</span><span class="token punctuation">]</span>\n<span class="token key property">enable</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>\n<span class="token key property">lint</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h5 id="example-for-vim-neovim"><a class="header-anchor" href="#example-for-vim-neovim">#</a> Example for Vim/Neovim</h5>',2),_n=(0,e.Uk)("install "),Un={href:"https://github.com/prabirshrestha/vim-lsp",target:"_blank",rel:"noopener noreferrer"},Sn=(0,e.Wm)("code",null,"vim-lsp",-1),En=(0,e.Wm)("li",null,[(0,e.Uk)("add "),(0,e.Wm)("code",null,"vimrc/init.vim")],-1),Ln=(0,e.uE)('<div class="language-vim ext-vim line-numbers-mode"><pre class="language-vim"><code><span class="token keyword">if</span> <span class="token function">executable</span><span class="token punctuation">(</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">)</span>\n  augroup LspTypeScript\n    <span class="token builtin">autocmd</span><span class="token operator">!</span>\n    <span class="token builtin">autocmd</span> User lsp_setup <span class="token keyword">call</span> <span class="token builtin">lsp</span>#<span class="token function">register_server</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    \\ <span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;deno lsp&quot;</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;cmd&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>server_info <span class="token operator">-</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;lsp&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;root_uri&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>server_info<span class="token operator">-</span><span class="token operator">&gt;</span><span class="token builtin">lsp</span>#utils#<span class="token function">path_to_uri</span><span class="token punctuation">(</span><span class="token builtin">lsp</span>#utils#<span class="token function">find_nearest_parent_file_directory</span><span class="token punctuation">(</span><span class="token builtin">lsp</span>#utils#<span class="token function">get_buffer_path</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;tsconfig.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;allowlist&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;typescript.tsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    \\ <span class="token string">&quot;initialization_options&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    \\     <span class="token string">&quot;enable&quot;</span><span class="token punctuation">:</span> v<span class="token punctuation">:</span>true<span class="token punctuation">,</span>\n    \\     <span class="token string">&quot;lint&quot;</span><span class="token punctuation">:</span> v<span class="token punctuation">:</span>true<span class="token punctuation">,</span>\n    \\     <span class="token string">&quot;unstable&quot;</span><span class="token punctuation">:</span> v<span class="token punctuation">:</span>true<span class="token punctuation">,</span>\n    \\   <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    \\ <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  augroup END\n<span class="token keyword">endif</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h5 id="example-for-sublime-text"><a class="header-anchor" href="#example-for-sublime-text">#</a> Example for Sublime Text</h5>',2),Pn=(0,e.Uk)("Install the "),jn={href:"https://packagecontrol.io/packages/LSP",target:"_blank",rel:"noopener noreferrer"},Cn=(0,e.Uk)("Sublime LSP package"),zn=(0,e.Uk)("Install the "),Tn={href:"https://packagecontrol.io/packages/TypeScript",target:"_blank",rel:"noopener noreferrer"},On=(0,e.Uk)("TypeScript package"),In=(0,e.Uk)(" to get syntax highlighting"),Dn=(0,e.Wm)("li",null,[(0,e.Uk)("Add the following "),(0,e.Wm)("code",null,".sublime-project"),(0,e.Uk)(" file to your project folder")],-1),An=(0,e.uE)('<div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">&quot;LSP&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token property">&quot;deno&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">&quot;deno&quot;</span><span class="token punctuation">,</span>\n          <span class="token string">&quot;lsp&quot;</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;initializationOptions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// &quot;config&quot;: &quot;&quot;, // Sets the path for the config file in your project</span>\n          <span class="token property">&quot;enable&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token comment">// &quot;importMap&quot;: &quot;&quot;, // Sets the path for the import-map in your project</span>\n          <span class="token property">&quot;lint&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token property">&quot;unstable&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n        <span class="token property">&quot;languages&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;javascript&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.js&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/Babel/JavaScript (Babel).sublime-syntax&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/JavaScript/JavaScript.sublime-syntax&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;javascriptreact&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.jsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/Babel/JavaScript (Babel).sublime-syntax&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/JavaScript/JavaScript.sublime-syntax&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescript&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.ts&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/TypeScript-TmLanguage/TypeScript.tmLanguage&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/TypeScript Syntax/TypeScript.tmLanguage&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token property">&quot;languageId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;typescriptreact&quot;</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;scopes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;source.tsx&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token property">&quot;syntaxes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token string">&quot;Packages/TypeScript-TmLanguage/TypeScriptReact.tmLanguage&quot;</span><span class="token punctuation">,</span>\n              <span class="token string">&quot;Packages/TypeScript Syntax/TypeScriptReact.tmLanguage&quot;</span>\n            <span class="token punctuation">]</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div>',1),Rn=(0,e.uE)('<h2 id="first-steps"><a class="header-anchor" href="#first-steps">#</a> First steps</h2><h2 id="command-line-interface"><a class="header-anchor" href="#command-line-interface">#</a> Command line interface</h2><h2 id="permissions"><a class="header-anchor" href="#permissions">#</a> Permissions</h2><h2 id="using-webassembly"><a class="header-anchor" href="#using-webassembly">#</a> Using WebAssembly</h2><h2 id="debugging-your-code"><a class="header-anchor" href="#debugging-your-code">#</a> Debugging your code</h2>',5),Jn={render:function(n,s){const a=(0,e.up)("OutboundLink"),Jn=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",t,[p,(0,e.Wm)(a)]),o])]),c,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",r,[i,(0,e.Wm)(a)]),u,m]),(0,e.Wm)("li",null,[d,(0,e.Wm)("a",k,[b,(0,e.Wm)(a)]),h,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",g,[f,(0,e.Wm)(a)]),v])])])]),q,(0,e.Wm)("p",null,[(0,e.Wm)(Jn,{to:"/runtime/deno/contributing.html"},{default:(0,e.w5)((()=>[W,y])),_:1}),x]),w,_,(0,e.Wm)("ul",null,[U,(0,e.Wm)("li",null,[S,E,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",L,[P,(0,e.Wm)(a)])]),j])])]),C,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",z,[T,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",O,[I,(0,e.Wm)(a)])])]),(0,e.Wm)("details",D,[A,R,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",J,[N,(0,e.Wm)(a)])]),B,V]),$,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",H,[M,(0,e.Wm)(a)]),F]),(0,e.Wm)("li",null,[(0,e.Wm)("a",K,[Y,(0,e.Wm)(a)]),G])]),Q,(0,e.Wm)("ul",null,[X,(0,e.Wm)("li",null,[Z,(0,e.Wm)("ul",null,[nn,(0,e.Wm)("li",null,[(0,e.Wm)("a",sn,[an,(0,e.Wm)(a)])])])]),en]),ln,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",tn,[pn,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",on,[cn,(0,e.Wm)(a)])])]),rn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",un,[mn,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[(0,e.Wm)("a",dn,[kn,(0,e.Wm)(a)])])]),bn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",hn,[gn,(0,e.Wm)(a)]),fn])]),vn,qn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",Wn,[yn,(0,e.Wm)(a)])]),xn]),wn,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[_n,(0,e.Wm)("a",Un,[Sn,(0,e.Wm)(a)])]),En]),Ln,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[Pn,(0,e.Wm)("a",jn,[Cn,(0,e.Wm)(a)])]),(0,e.Wm)("li",null,[zn,(0,e.Wm)("a",Tn,[On,(0,e.Wm)(a)]),In]),Dn]),An]),Rn],64)}}},6835:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-6ea46dbd",path:"/runtime/deno/getting-start.html",title:"시작하기",lang:"ko-KR",frontmatter:{sidebar:"auto",prev:"./introduction.md"},excerpt:"",headers:[{level:2,title:"Installation",slug:"installation",children:[{level:3,title:"다운로드와 설치",slug:"다운로드와-설치",children:[]},{level:3,title:"설치 테스트",slug:"설치-테스트",children:[]},{level:3,title:"업데이트",slug:"업데이트",children:[]},{level:3,title:"빌드",slug:"빌드",children:[]}]},{level:2,title:"환경설정",slug:"환경설정",children:[{level:3,title:"Environmental variables",slug:"environmental-variables",children:[]},{level:3,title:"Shell autocomplete",slug:"shell-autocomplete",children:[]},{level:3,title:"Editors and IDEs",slug:"editors-and-ides",children:[]}]},{level:2,title:"First steps",slug:"first-steps",children:[]},{level:2,title:"Command line interface",slug:"command-line-interface",children:[]},{level:2,title:"Permissions",slug:"permissions",children:[]},{level:2,title:"Using WebAssembly",slug:"using-webassembly",children:[]},{level:2,title:"Debugging your code",slug:"debugging-your-code",children:[]}],filePathRelative:"runtime/deno/getting-start.md",git:{updatedTime:1620226607e3}}}}]);