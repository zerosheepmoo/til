(self.webpackChunktil=self.webpackChunktil||[]).push([[8718],{9013:(e,t,l)=>{"use strict";l.r(t),l.d(t,{default:()=>x});var r=l(6252);const i=(0,r.uE)('<h1 id="typescript-사용하기"><a class="header-anchor" href="#typescript-사용하기">#</a> Typescript 사용하기</h1><h2 id="overview"><a class="header-anchor" href="#overview">#</a> Overview</h2><h3 id="작동원리"><a class="header-anchor" href="#작동원리">#</a> 작동원리</h3>',3),a={href:"https://deno.land/manual@v1.9.2/typescript/overview#how-does-it-work",target:"_blank",rel:"noopener noreferrer"},n=(0,r.Uk)("원문 how does it work"),c=(0,r.uE)('<h3 id="타입체킹"><a class="header-anchor" href="#타입체킹">#</a> 타입체킹</h3><ul><li><code>--no-check</code> 로 타입체킹 안하고 실행 퍼포먼스를 높일 수 있음!</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno run --no-check something.ts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="파일-타입-결정하기"><a class="header-anchor" href="#파일-타입-결정하기">#</a> 파일 타입 결정하기</h3><ul><li>local 에서는 extension 에 의해서 이루어진다. 없다면 JSX, TSX, TS 모두 js 로 간주된다.</li><li>remote 에서는 mime-type 으로 결정한다. <ul><li>애매한 경우 모듈의 경로 또한 이용한다. <code>d.ts</code> 와 <code>ts</code></li></ul></li></ul><h4 id="지원하는-파일타입"><a class="header-anchor" href="#지원하는-파일타입">#</a> 지원하는 파일타입</h4>',6),s=(0,r.Uk)("모든 목록은 "),d={href:"https://deno.land/manual@v1.9.2/typescript/overview#supported-media-types",target:"_blank",rel:"noopener noreferrer"},o=(0,r.Uk)("원문 해당 섹션"),h=(0,r.Uk)("참조"),u=(0,r.uE)('<table><thead><tr><th style="text-align:center;">media type</th><th style="text-align:center;">How file is handled</th></tr></thead><tbody><tr><td style="text-align:center;"><code>application/typescript</code></td><td style="text-align:center;">TypeScript (with path extension influence)</td></tr><tr><td style="text-align:center;"><code>text/typescript</code></td><td style="text-align:center;">TypeScript (with path extension influence)</td></tr><tr><td style="text-align:center;"><code>video/mp2t</code></td><td style="text-align:center;">TypeScript (with path extension influence)</td></tr><tr><td style="text-align:center;"><code>text/jsx</code></td><td style="text-align:center;">JSX</td></tr><tr><td style="text-align:center;"><code>text/tsx</code></td><td style="text-align:center;">TSX</td></tr><tr><td style="text-align:center;"><code>text/plain</code></td><td style="text-align:center;">파일경로, 안되면 unknown</td></tr></tbody></table><h3 id="strict-by-default"><a class="header-anchor" href="#strict-by-default">#</a> Strict by default</h3><ul><li>Deno 는 default 로 strict mode 다</li></ul><h3 id="js-와-섞임"><a class="header-anchor" href="#js-와-섞임">#</a> JS 와 섞임</h3>',4),p=(0,r.Uk)("javascript 의 타입체크는 하지 않는다 by default "),g={href:"https://deno.land/manual@v1.9.2/typescript/configuration",target:"_blank",rel:"noopener noreferrer"},m=(0,r.Uk)("config"),f=(0,r.Uk)("로 바꿀 수 있다."),y=(0,r.Wm)("li",null,"js 를 ts 에 importing 하거나 그 반대의 시나리오는 지원하지 않는다.",-1),v=(0,r.uE)('<h3 id="터미널에서의-진단"><a class="header-anchor" href="#터미널에서의-진단">#</a> 터미널에서의 진단</h3><ul><li>다음을 통해 무시 <ul><li><code>// @ts-ignore</code></li><li><code>// @ts-expect-error</code></li><li><code>--no-check</code></li></ul></li></ul><h3 id="타입-resolution"><a class="header-anchor" href="#타입-resolution">#</a> 타입 resolution</h3><ul><li>코어 디자인 principle 이 &quot;magical&quot; resolution 을 피하는데 있다.</li></ul><h2 id="configuration"><a class="header-anchor" href="#configuration">#</a> Configuration</h2><h2 id="types-and-type-declarations"><a class="header-anchor" href="#types-and-type-declarations">#</a> Types and type declarations</h2><h2 id="migrating-to-from-javascript"><a class="header-anchor" href="#migrating-to-from-javascript">#</a> Migrating to/from JavaScript</h2><h2 id="runtime-compiler-apis"><a class="header-anchor" href="#runtime-compiler-apis">#</a> Runtime compiler APIs</h2><h2 id="faq"><a class="header-anchor" href="#faq">#</a> FAQ</h2>',9),x={render:function(e,t){const l=(0,r.up)("OutboundLink");return(0,r.wg)(),(0,r.j4)(r.HY,null,[i,(0,r.Wm)("blockquote",null,[(0,r.Wm)("p",null,[(0,r.Wm)("a",a,[n,(0,r.Wm)(l)])])]),c,(0,r.Wm)("blockquote",null,[(0,r.Wm)("p",null,[s,(0,r.Wm)("a",d,[o,(0,r.Wm)(l)]),h])]),u,(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[p,(0,r.Wm)("ul",null,[(0,r.Wm)("li",null,[(0,r.Wm)("a",g,[m,(0,r.Wm)(l)]),f])])]),y]),v],64)}}},4740:(e,t,l)=>{"use strict";l.r(t),l.d(t,{data:()=>r});const r={key:"v-f47a4da4",path:"/runtime/deno/using-typescript.html",title:"Typescript 사용하기",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"Overview",slug:"overview",children:[{level:3,title:"작동원리",slug:"작동원리",children:[]},{level:3,title:"타입체킹",slug:"타입체킹",children:[]},{level:3,title:"파일 타입 결정하기",slug:"파일-타입-결정하기",children:[]},{level:3,title:"Strict by default",slug:"strict-by-default",children:[]},{level:3,title:"JS 와 섞임",slug:"js-와-섞임",children:[]},{level:3,title:"터미널에서의 진단",slug:"터미널에서의-진단",children:[]},{level:3,title:"타입 resolution",slug:"타입-resolution",children:[]}]},{level:2,title:"Configuration",slug:"configuration",children:[]},{level:2,title:"Types and type declarations",slug:"types-and-type-declarations",children:[]},{level:2,title:"Migrating to/from JavaScript",slug:"migrating-to-from-javascript",children:[]},{level:2,title:"Runtime compiler APIs",slug:"runtime-compiler-apis",children:[]},{level:2,title:"FAQ",slug:"faq",children:[]}],filePathRelative:"runtime/deno/using-typescript.md",git:{updatedTime:1620695143e3}}}}]);