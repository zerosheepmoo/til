(self.webpackChunktil=self.webpackChunktil||[]).push([[8886],{2628:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>y});var l=n(6252);const r=(0,l.Wm)("h1",{id:"_13-5-3-the-typeof-연산자"},[(0,l.Wm)("a",{class:"header-anchor",href:"#_13-5-3-the-typeof-연산자"},"#"),(0,l.Uk)(" 13.5.3 The typeof 연산자")],-1),a={href:"https://tc39.es/ecma262/#sec-typeof-operator",target:"_blank",rel:"noopener noreferrer"},i=(0,l.Uk)("ECMAScript 원본"),o=(0,l.uE)('<h2 id="_13-5-3-1-runtime-semantics-evaluation"><a class="header-anchor" href="#_13-5-3-1-runtime-semantics-evaluation">#</a> 13.5.3.1 Runtime Semantics: Evaluation</h2><p>UnaryExpression : typeof UnaryExpression</p><ol><li>Let val be the result of evaluating UnaryExpression.</li><li>If val is a Reference Record, then <ol><li>If IsUnresolvableReference(val) is true, return &quot;undefined&quot;.</li></ol></li><li>Set val to ? GetValue(val).</li><li>Return a String according to Table 38.</li></ol><ul><li>Table 38: typeof Operator Results</li></ul><table><thead><tr><th style="text-align:center;">Type of val</th><th style="text-align:center;">Result</th></tr></thead><tbody><tr><td style="text-align:center;">Undefined</td><td style="text-align:center;">&quot;undefined&quot;</td></tr><tr><td style="text-align:center;">Null</td><td style="text-align:center;">&quot;object&quot;</td></tr><tr><td style="text-align:center;">Boolean</td><td style="text-align:center;">&quot;boolean&quot;</td></tr><tr><td style="text-align:center;">Number</td><td style="text-align:center;">&quot;number&quot;</td></tr><tr><td style="text-align:center;">String</td><td style="text-align:center;">&quot;string&quot;</td></tr><tr><td style="text-align:center;">Symbol</td><td style="text-align:center;">&quot;symbol&quot;</td></tr><tr><td style="text-align:center;">BigInt</td><td style="text-align:center;">&quot;bigint&quot;</td></tr><tr><td style="text-align:center;">Object</td><td style="text-align:center;">(does not implement [[Call]]) &quot;object&quot;</td></tr><tr><td style="text-align:center;">Object</td><td style="text-align:center;">(implements [[Call]]) &quot;function&quot;</td></tr></tbody></table>',5),s={class:"custom-container warning"},d=(0,l.Wm)("p",{class:"custom-container-title"},"Note",-1),c=(0,l.Uk)("An additional entry related to [[IsHTMLDDA]] Internal Slot can be found in "),u={href:"https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-typeof",target:"_blank",rel:"noopener noreferrer"},m=(0,l.Uk)("B.3.7.3."),y={render:function(t,e){const n=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[r,(0,l.Wm)("blockquote",null,[(0,l.Wm)("p",null,[(0,l.Wm)("a",a,[i,(0,l.Wm)(n)])])]),o,(0,l.Wm)("div",s,[d,(0,l.Wm)("p",null,[c,(0,l.Wm)("a",u,[m,(0,l.Wm)(n)])])])],64)}}},5399:(t,e,n)=>{"use strict";n.r(e),n.d(e,{data:()=>l});const l={key:"v-27a01990",path:"/ecmascript/13-5-3.html",title:"13.5.3 The typeof 연산자",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"13.5.3.1 Runtime Semantics: Evaluation",slug:"_13-5-3-1-runtime-semantics-evaluation",children:[]}],filePathRelative:"ecmascript/13-5-3.md",git:{updatedTime:1618490548e3}}}}]);