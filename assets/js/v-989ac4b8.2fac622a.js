(self.webpackChunktil=self.webpackChunktil||[]).push([[3971],{6596:(n,e,a)=>{"use strict";a.r(e),a.d(e,{default:()=>Y});var s=a(6252);const t=(0,s.Wm)("h1",{id:"github-commit-signature-verification"},[(0,s.Wm)("a",{class:"header-anchor",href:"#github-commit-signature-verification"},"#"),(0,s.Uk)(" Github commit signature verification")],-1),l={href:"https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification",target:"_blank",rel:"noopener noreferrer"},i=(0,s.Uk)("github manual"),o=(0,s.Wm)("h2",{id:"about"},[(0,s.Wm)("a",{class:"header-anchor",href:"#about"},"#"),(0,s.Uk)(" About")],-1),r=(0,s.Wm)("p",null,[(0,s.Wm)("code",null,"GPG"),(0,s.Uk)(", "),(0,s.Wm)("code",null,"S/MIME"),(0,s.Uk)("를 사용하여 로컬에서 태그를 표시하고 커밋할 수 있다.")],-1),u=(0,s.Wm)("h2",{id:"verification-status-보여주기"},[(0,s.Wm)("a",{class:"header-anchor",href:"#verification-status-보여주기"},"#"),(0,s.Uk)(" verification status 보여주기")],-1),c=(0,s.Wm)("p",null,"태그랑 커밋에 vigilant(경계) mode 활성화한다.",-1),p={href:"https://github.com/settings/keys",target:"_blank",rel:"noopener noreferrer"},g=(0,s.Uk)("깃허브 ssh & gpg keys 설정"),m=(0,s.Uk)("에서 비질런트 모드를 활성화하자 (현재 시점: 베타)"),k=(0,s.uE)('<h2 id="방법"><a class="header-anchor" href="#방법">#</a> 방법</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>/Users/hubot/.gnupg/secring.gpg\n------------------------------------\nsec   4096R/3AA5C34371567BD2 <span class="token number">2016</span>-03-10 <span class="token punctuation">[</span>expires: <span class="token number">2017</span>-03-10<span class="token punctuation">]</span> <span class="token comment"># 3AA~ 얘가 id</span>\nuid                          Hubot \nssb   4096R/42B317FD4BA89E7A <span class="token number">2016</span>-03-10\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',2),b=(0,s.Wm)("li",null,[(0,s.Wm)("code",null,"gpg --list-secret-keys --keyid-format=long"),(0,s.Uk)(" 로 gpg key 체크")],-1),h=(0,s.Uk)("없으면 만든다. "),d={href:"https://www.gnupg.org/download/",target:"_blank",rel:"noopener noreferrer"},W=(0,s.Uk)("gpg command line tool"),f=(0,s.Uk)(" 다운로드"),v=(0,s.Wm)("li",null,[(0,s.Wm)("code",null,"gpg --full-generate-key"),(0,s.Uk)(" 로 RSA key 생성, "),(0,s.Wm)("code",null,"4096 bit"),(0,s.Uk)(", key doesn't expire, passphrase 입력")],-1),y=(0,s.Wm)("li",null,[(0,s.Wm)("code",null,"gpg --armor --export [gpg id]"),(0,s.Uk)("를 해서 "),(0,s.Wm)("code",null,"-----BEGIN PGP PUBLIC KEY BLOCK-----"),(0,s.Uk)(" 부터 시작해서 END 까지 복사")],-1),U=(0,s.Wm)("li",null,[(0,s.Uk)("있으면 public key 를 복사해서 (위의 2-3번단계로) "),(0,s.Wm)("code",null,"settings - ssh and gpg keys - new gpg key"),(0,s.Uk)(" 에 붙여넣기")],-1),w=(0,s.Wm)("code",null,"git config --global user.signingkey [gpg id]",-1),G=(0,s.Uk)(" 로 전체부여하거나 "),x=(0,s.Wm)("code",null,"--global",-1),A=(0,s.Uk)(" 없이 특정 레포지토리에서만 활성화 "),P=(0,s.Wm)("li",null,[(0,s.Uk)("gpg suite 없다면 "),(0,s.Wm)("code",null,".zshrc"),(0,s.Uk)(" 파일에")],-1),_=(0,s.Uk)("smime 은 "),E={href:"https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/telling-git-about-your-signing-key#telling-git-about-your-x509-key",target:"_blank",rel:"noopener noreferrer"},B=(0,s.Uk)("링크"),C={href:"https://docs.github.com/en/github/authenticating-to-github/managing-commit-signature-verification/associating-an-email-with-your-gpg-key",target:"_blank",rel:"noopener noreferrer"},R=(0,s.Uk)("no-reply email 사용법 참고"),T=(0,s.Wm)("li",null,[(0,s.Uk)("이제 커밋하면 댐! "),(0,s.Wm)("ol",null,[(0,s.Wm)("li",null,[(0,s.Wm)("code",null,"git tag -s mytag"),(0,s.Uk)(", "),(0,s.Wm)("code",null,"git tag -v mytag"),(0,s.Uk)(": signed tag create / verified")])])],-1),z=(0,s.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># 4-1 단계 스크립트</span>\n<span class="token keyword">if</span> <span class="token punctuation">[</span> -r ~/.zshrc <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;export GPG_TTY=<span class="token variable"><span class="token variable">$(</span><span class="token function">tty</span><span class="token variable">)</span></span>&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zshrc<span class="token punctuation">;</span> <span class="token punctuation">\\</span>\n  <span class="token keyword">else</span> <span class="token builtin class-name">echo</span> <span class="token string">&#39;export GPG_TTY=<span class="token variable"><span class="token variable">$(</span><span class="token function">tty</span><span class="token variable">)</span></span>&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.zprofile<span class="token punctuation">;</span> <span class="token keyword">fi</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',1),Y={render:function(n,e){const a=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[t,(0,s.Wm)("blockquote",null,[(0,s.Wm)("p",null,[(0,s.Wm)("a",l,[i,(0,s.Wm)(a)])])]),o,r,u,c,(0,s.Wm)("p",null,[(0,s.Wm)("a",p,[g,(0,s.Wm)(a)]),m]),k,(0,s.Wm)("ol",null,[b,(0,s.Wm)("li",null,[h,(0,s.Wm)("ol",null,[(0,s.Wm)("li",null,[(0,s.Wm)("a",d,[W,(0,s.Wm)(a)]),f]),v,y])]),U,(0,s.Wm)("li",null,[w,G,x,A,(0,s.Wm)("ol",null,[P,(0,s.Wm)("li",null,[_,(0,s.Wm)("a",E,[B,(0,s.Wm)(a)])]),(0,s.Wm)("li",null,[(0,s.Wm)("a",C,[R,(0,s.Wm)(a)])])])]),T]),z],64)}}},5727:(n,e,a)=>{"use strict";a.r(e),a.d(e,{data:()=>s});const s={key:"v-989ac4b8",path:"/2021/06/13/github-verified.html",title:"Github commit signature verification",lang:"ko-KR",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",sidebar:"auto"},excerpt:"",headers:[{level:2,title:"About",slug:"about",children:[]},{level:2,title:"verification status 보여주기",slug:"verification-status-보여주기",children:[]},{level:2,title:"방법",slug:"방법",children:[]}],filePathRelative:"_posts/202106/2021-06-13-github-verified.md",git:{updatedTime:1623555718e3}}}}]);