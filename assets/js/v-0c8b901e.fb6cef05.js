(self.webpackChunktil=self.webpackChunktil||[]).push([[5561],{7345:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});var l=i(6252);const a=(0,l.Wm)("h1",{id:"오토마타-이론-기초"},[(0,l.Wm)("a",{class:"header-anchor",href:"#오토마타-이론-기초"},"#"),(0,l.Uk)(" 오토마타 이론 기초")],-1),n={href:"https://cs.stanford.edu/people/eroberts/courses/soco/projects/2004-05/automata-theory/basics.html",target:"_blank",rel:"noopener noreferrer"},o=(0,l.Uk)("스탠포드 대학교 강의자료"),s=(0,l.uE)('<h2 id="오토마톤-automaton"><a class="header-anchor" href="#오토마톤-automaton">#</a> 오토마톤(automaton)</h2><ul><li>일련(series)의 상태(state)나 구성(configurations)을 움직이면서, 입력에 대해 계산하는 기계의 추상 모델</li><li>계산의 각 state에서, 트랜지션 함수가 다음 config를 결정하며, 이 구성은 현재 config의 finite 부분에 기초한다.</li><li>결과적으로 계산이 허용가능한 config 에 도달하기만 하면, 그 입력을 허용하게 된다.</li><li>가장 일반적이고 강력한 오토마타: <strong>튜링 기계</strong></li></ul><h3 id="주요목적"><a class="header-anchor" href="#주요목적">#</a> 주요목적</h3><ul><li>signal이 주기적으로 샘플링된 곳의 이산 체계의 동적인 행위를 분석하고 설명하기 위함.</li><li>이러한 이산 체계의 행위는 그 체계가 storage, combinational element가 구성되는 방식에 따라 결정.</li></ul><h4 id="그러한-기계의-특성"><a class="header-anchor" href="#그러한-기계의-특성">#</a> 그러한 기계의 특성</h4><ul><li><code>inputs</code>: 입력 시그널의 유한 집합 I 에서 선택된 symbol 들의 시퀀스. <ul><li>집합 I 는 {x1, x,2, x3... xk}, where k가 input의 갯수.</li></ul></li><li><code>Outputs</code>: 유한집합 Z 에서 선택된 symbol 들의 시퀀스. <ul><li>집합 Z 는 {y1, y2, y3 ... ym}, where m 이 output의 갯수.</li></ul></li><li><code>States</code>: 유한집합 Q <ul><li>오토마톤의 타입에 따라 결정됨.</li></ul></li></ul><h2 id="_4개의-주요-오토마톤"><a class="header-anchor" href="#_4개의-주요-오토마톤">#</a> 4개의 주요 오토마톤</h2><ul><li>유한상태기계: Finite-state machine (FSM)</li><li>푸쉬다운 오토마타: Pushdown automata (PA)</li><li>선형 제한 오토마타: Linear-bounded automata (LBA)</li><li>튜링 기계: Turing machine</li></ul><h3 id="fsm-에-대해"><a class="header-anchor" href="#fsm-에-대해">#</a> FSM 에 대해</h3><h4 id="fsm-역사"><a class="header-anchor" href="#fsm-역사">#</a> FSM 역사</h4><ul><li>여러 분야의 전문가들이 공통의 관심사를 공유하기 시작함. <ul><li>그것 인간의 생각 프로세스를 모델링하는 것.</li><li>Warren McCulloch 와 Walter Pitts라는 두명의 neurophysiologist가 처음으로 유한 오토마타의 묘사를 소개함(1943).</li></ul></li><li>밀리 기계와 무레 기계(Mealy machine and the Moore machine), (1955-56) <ul><li>밀리는 current input, state / 무레는 current state 만 고려</li></ul></li></ul><h4 id="fsm-이란"><a class="header-anchor" href="#fsm-이란">#</a> FSM 이란</h4><blockquote><p>state 집합 Q 가 유한할 때</p><p>An automaton in which the state set Q contains only a finite number of elements</p></blockquote><ul><li>state 트랜지션 함수는 current state 와 input event 를 받고, output events와 next state의 집합을 반환.</li><li>input events 가 output events 로 매핑.</li><li>메모리를 적게 차지하며, 메모리를 유지하지 않는 이상적인 계산 모델.</li><li>예시: 엘리베이터</li></ul><p>A finite-state machine is formally defined as a 5-tuple (Q, I, Z, ∂, W) such that:</p><p>Q = state 유한집합 I = input symbol 유한집합 Z = output symbol 유한집합 ∂ = mapping of I x Q into Q called the state transition function, i.e. I x Q → Q W = mapping W of I x Q onto Z, called the output function A = set of accept states where F is a subset of Q</p><p><code>State transition function: I → Z</code></p><h4 id="타입-분류-기준"><a class="header-anchor" href="#타입-분류-기준">#</a> 타입 분류 기준</h4><p>acceptors: either accept the input or do not recognizers: either recognize the input or do not transducers: generate output from given input</p><h3 id="튜링머신"><a class="header-anchor" href="#튜링머신">#</a> 튜링머신</h3><p>A Turing machine is formally defined by the set [Q, Σ, Γ, δ, q0, B, F] where</p><ul><li>Q = finite set of states, of which one state q0 is the initial state</li><li>Σ = a subset of Γ not including B, is the set of input symbols</li><li>Γ = finite set of allowable tape symbols</li><li>δ = the next move function , a mapping function from Q x Γ to Q x Γ x {L,R}, where L and R denote the directions left and right respectively</li><li>q0 = in set Q as the start state</li><li>B = a symbol of Γ, as the blank</li><li>F ⊆ Q the set of final states</li></ul><p>Turing machine is capable of changing symbols on its tape and simulating computer execution and storage.</p>',23),r={render:function(e,t){const i=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.j4)(l.HY,null,[a,(0,l.Wm)("p",null,[(0,l.Wm)("a",n,[o,(0,l.Wm)(i)])]),s],64)}}},5720:(e,t,i)=>{"use strict";i.r(t),i.d(t,{data:()=>l});const l={key:"v-0c8b901e",path:"/2021/06/21/automata-theo.html",title:"오토마타 이론 기초",lang:"ko-KR",frontmatter:{permalinkPattern:"/:year/:month/:day/:slug.html",sidebar:"auto"},excerpt:"",headers:[{level:2,title:"오토마톤(automaton)",slug:"오토마톤-automaton",children:[{level:3,title:"주요목적",slug:"주요목적",children:[]}]},{level:2,title:"4개의 주요 오토마톤",slug:"_4개의-주요-오토마톤",children:[{level:3,title:"FSM 에 대해",slug:"fsm-에-대해",children:[]},{level:3,title:"튜링머신",slug:"튜링머신",children:[]}]}],filePathRelative:"_posts/202106/2021-06-21-automata-theo.md",git:{updatedTime:1624282775e3}}}}]);