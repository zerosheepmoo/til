(self.webpackChunktil=self.webpackChunktil||[]).push([[6093],{1982:(n,s,a)=>{"use strict";a.r(s),a.d(s,{default:()=>u});var e=a(6252);const l=(0,e.uE)('<h1 id="빌트-인-툴"><a class="header-anchor" href="#빌트-인-툴">#</a> 빌트 인 툴</h1><ul><li>bundler (deno bundle)</li><li>compiling executables (deno compile)</li><li>installer (deno install)</li><li>dependency inspector (deno info)</li><li>documentation generator (deno doc)</li><li>formatter (deno fmt)</li><li>repl (deno repl)</li><li>test runner (deno test)</li><li>linter (deno lint)</li></ul><h2 id="install"><a class="header-anchor" href="#install">#</a> install</h2><ul><li><code>deno install [OPTIONS...] [URL] [SCRIPT_ARGS...]</code></li><li>executable code 를 설치하고 배포하는 용도</li><li><code>EXEC</code></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ deno <span class="token function">install</span> --allow-net --allow-read https://deno.land/std@0.97.0/http/file_server.ts\n<span class="token punctuation">[</span><span class="token number">1</span>/1<span class="token punctuation">]</span> Compiling https://deno.land/std@0.97.0/http/file_server.ts\n\n✅ Successfully installed file_server.\n/Users/deno/.deno/bin/file_server\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>실행이름 바꾸기</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno <span class="token function">install</span> --allow-net --allow-read -n serve https://deno.land/std@0.97.0/http/file_server.ts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>설치 루트 바꾸기 <ul><li><code>--root</code> 옵션</li><li><code>DENO_INSTALL_ROOT</code>: 환경변수</li><li><code>$HOME/.deno</code>: default</li></ul></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>deno <span class="token function">install</span> --root ~~~\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><ul><li>메뉴얼리하게</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;export PATH=&quot;<span class="token environment constant">$HOME</span>/.deno/bin:<span class="token environment constant">$PATH</span>&quot;&#39;</span> <span class="token operator">&gt;&gt;</span> ~/.bashrc\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',11),t={href:"https://deno.land/manual@v1.10.2/examples/module_metadata",target:"_blank",rel:"noopener noreferrer"},p=(0,e.Wm)("code",null,"import.meta.main",-1),o=(0,e.uE)('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// https://example.com/awesome/cli.ts</span>\n<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">myAwesomeCli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>\n  <span class="token operator">--</span> snip <span class="token operator">--</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>main<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">myAwesomeCli</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>example</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Install using deno install</span>\n\n$ deno <span class="token function">install</span> -n awesome_cli https://example.com/awesome/cli.ts\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="코드-포매터"><a class="header-anchor" href="#코드-포매터">#</a> 코드 포매터</h2><ul><li><code>deno fmt</code></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># format all JS/TS files in the current directory and subdirectories</span>\ndeno <span class="token function">fmt</span>\n<span class="token comment"># format specific files</span>\ndeno <span class="token function">fmt</span> myfile1.ts myfile2.ts\n<span class="token comment"># check if all the JS/TS files in the current directory and subdirectories are formatted</span>\ndeno <span class="token function">fmt</span> --check\n<span class="token comment"># format stdin and write to stdout</span>\n<span class="token function">cat</span> file.ts <span class="token operator">|</span> deno <span class="token function">fmt</span> -\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><code>// deno-fmt-ignore</code>: 한 줄</li><li><code>// deno-fmt-ignore-file</code>: 파일 최상단</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// deno-fmt-ignore</span>\n<span class="token keyword">export</span> <span class="token keyword">const</span> identity <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="레플-read-eval-print-loop"><a class="header-anchor" href="#레플-read-eval-print-loop">#</a> 레플(Read eval print loop)</h2>',9),c={href:"https://deno.land/manual@v1.10.2/tools/repl",target:"_blank",rel:"noopener noreferrer"},i=(0,e.Uk)("deno repl"),r=(0,e.uE)('<h2 id="번들러"><a class="header-anchor" href="#번들러">#</a> 번들러</h2><ul><li><code>deno bundle [URL]</code></li><li>default 로 stdout</li><li>결과는 es module</li></ul><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>website.bundle.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- 또는 --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> website <span class="token keyword">from</span> <span class="token string">&quot;website.bundle.js&quot;</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="컴파일"><a class="header-anchor" href="#컴파일">#</a> 컴파일</h2><ul><li>exec 파일 만들기</li><li><code>deno compile [--output &lt;OUT&gt;] &lt;SRC&gt;</code></li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code> --target <span class="token operator">&lt;</span>target<span class="token operator">&gt;</span>\n            Target OS architecture <span class="token punctuation">[</span>possible values: x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin, aarch64-apple-darwin<span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="문서"><a class="header-anchor" href="#문서">#</a> 문서</h2><ul><li><code>deno doc [file name] --json</code></li></ul>',8),u={render:function(n,s){const a=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.j4)(e.HY,null,[l,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",t,[p,(0,e.Wm)(a)])])]),o,(0,e.Wm)("ul",null,[(0,e.Wm)("li",null,[(0,e.Wm)("a",c,[i,(0,e.Wm)(a)])])]),r],64)}}},6939:(n,s,a)=>{"use strict";a.r(s),a.d(s,{data:()=>e});const e={key:"v-4f29328a",path:"/runtime/deno/tools.html",title:"빌트 인 툴",lang:"ko-KR",frontmatter:{},excerpt:"",headers:[{level:2,title:"install",slug:"install",children:[]},{level:2,title:"코드 포매터",slug:"코드-포매터",children:[]},{level:2,title:"레플(Read eval print loop)",slug:"레플-read-eval-print-loop",children:[]},{level:2,title:"번들러",slug:"번들러",children:[]},{level:2,title:"컴파일",slug:"컴파일",children:[]},{level:2,title:"문서",slug:"문서",children:[]}],filePathRelative:"runtime/deno/tools.md",git:{updatedTime:1623237303e3}}}}]);